

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 16:09:21 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 23/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   0019D4                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _lat_reg
    62   0019D4  89                 	db	137
    63   0019D5  0F                 	db	15
    64   0019D6  8A                 	db	138
    65   0019D7  0F                 	db	15
    66   0019D8  8B                 	db	139
    67   0019D9  0F                 	db	15
    68   0019DA  00                 	db	0
    69   0019DB  00                 	db	0
    70   0019DC  00                 	db	0
    71   0019DD  00                 	db	0
    72                           
    73                           ;initializer for _tris_reg
    74   0019DE  92                 	db	146
    75   0019DF  0F                 	db	15
    76   0019E0  93                 	db	147
    77   0019E1  0F                 	db	15
    78   0019E2  94                 	db	148
    79   0019E3  0F                 	db	15
    80   0019E4  00                 	db	0
    81   0019E5  00                 	db	0
    82   0019E6  00                 	db	0
    83   0019E7  00                 	db	0
    84                           
    85                           ;initializer for _port_reg
    86   0019E8  80                 	db	128
    87   0019E9  0F                 	db	15
    88   0019EA  81                 	db	129
    89   0019EB  0F                 	db	15
    90   0019EC  82                 	db	130
    91   0019ED  0F                 	db	15
    92                           
    93                           ;initializer for _Motor_1
    94   0019EE  11                 	db	17
    95   0019EF  10                 	db	16
    96   0019F0  13                 	db	19
    97   0019F1  14                 	db	20
    98                           
    99                           ;initializer for _Motor
   100   0019F2  10                 	db	16
   101   0019F3  11                 	db	17
   102   0019F4  00                 	db	0
   103   0019F5  00                 	db	0
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   00199E                     __pcinit:
   109                           	callstack 0
   110   00199E                     start_initialization:
   111                           	callstack 0
   112   00199E                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (34 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117   00199E  0ED4               	movlw	low __pidataCOMRAM
   118   0019A0  6EF6               	movwf	tblptrl,c
   119   0019A2  0E19               	movlw	high __pidataCOMRAM
   120   0019A4  6EF7               	movwf	tblptrh,c
   121   0019A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122   0019A8  6EF8               	movwf	tblptru,c
   123   0019AA  EE00  F001         	lfsr	0,__pdataCOMRAM
   124   0019AE  EE10 F022          	lfsr	1,34
   125   0019B2                     copy_data0:
   126   0019B2  0009               	tblrd		*+
   127   0019B4  CFF5 FFEE          	movff	tablat,postinc0
   128   0019B8  50E5               	movf	postdec1,w,c
   129   0019BA  50E1               	movf	fsr1l,w,c
   130   0019BC  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to COMRAM (18 bytes)
   133   0019BE  EE00  F036         	lfsr	0,__pbssCOMRAM
   134   0019C2  0E12               	movlw	18
   135   0019C4                     clear_0:
   136   0019C4  6AEE               	clrf	postinc0,c
   137   0019C6  06E8               	decf	wreg,f,c
   138   0019C8  E1FD               	bnz	clear_0
   139   0019CA                     end_of_initialization:
   140                           	callstack 0
   141   0019CA                     __end_of__initialization:
   142                           	callstack 0
   143   0019CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144   0019CC  6EF8               	movwf	tblptru,c
   145   0019CE  0100               	movlb	0
   146   0019D0  EF91  F00C         	goto	_main	;jump to C main() function
   147                           
   148                           	psect	bssCOMRAM
   149   000036                     __pbssCOMRAM:
   150                           	callstack 0
   151   000036                     	ds	2
   152   000038                     	ds	2
   153   00003A                     	ds	2
   154   00003C                     	ds	2
   155   00003E                     	ds	2
   156   000040                     	ds	2
   157   000042                     	ds	2
   158   000044                     	ds	2
   159   000046                     button_read_state@F2933:
   160                           	callstack 0
   161   000046                     	ds	1
   162   000047                     button_intialize@F2927:
   163                           	callstack 0
   164   000047                     	ds	1
   165                           
   166                           	psect	dataCOMRAM
   167   000001                     __pdataCOMRAM:
   168                           	callstack 0
   169   000001                     _lat_reg:
   170                           	callstack 0
   171   000001                     	ds	10
   172   00000B                     _tris_reg:
   173                           	callstack 0
   174   00000B                     	ds	10
   175   000015                     _port_reg:
   176                           	callstack 0
   177   000015                     	ds	6
   178   00001B                     _Motor_1:
   179                           	callstack 0
   180   00001B                     	ds	4
   181   00001F                     _Motor:
   182                           	callstack 0
   183   00001F                     	ds	4
   184                           
   185                           	psect	cstackCOMRAM
   186   000023                     __pcstackCOMRAM:
   187                           	callstack 0
   188   000023                     gpio_pin_dirction_intialize@_pin_config:
   189                           	callstack 0
   190   000023                     gpio_pin_write_logic@_pin_config:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x0
   194   000023                     	ds	1
   195   000024                     ??_gpio_pin_dirction_intialize:
   196   000024                     gpio_pin_write_logic@logic:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x1
   200   000024                     	ds	1
   201   000025                     ??_gpio_pin_write_logic:
   202                           
   203                           ; 1 bytes @ 0x2
   204   000025                     	ds	4
   205   000029                     gpio_pin_dirction_intialize@ret:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x6
   209   000029                     	ds	1
   210   00002A                     gpio_pin_write_logic@ret:
   211                           	callstack 0
   212   00002A                     dc_motor_intialize@dc_motor_config:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x7
   216   00002A                     	ds	1
   217   00002B                     ??_dc_motor_intialize:
   218   00002B                     dc_motor_move_right@dc_motor_config:
   219                           	callstack 0
   220   00002B                     dc_motor_move_left@dc_motor_config:
   221                           	callstack 0
   222   00002B                     dc_motor_stop@dc_motor_config:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x8
   226   00002B                     	ds	1
   227   00002C                     dc_motor_intialize@ret:
   228                           	callstack 0
   229   00002C                     dc_motor_move_right@Motor_target:
   230                           	callstack 0
   231   00002C                     dc_motor_move_left@Motor_target:
   232                           	callstack 0
   233   00002C                     dc_motor_stop@Motor_target:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x9
   237   00002C                     	ds	1
   238   00002D                     ??_dc_motor_move_right:
   239   00002D                     ??_dc_motor_stop:
   240   00002D                     ??_dc_motor_move_left:
   241   00002D                     dc_motor_intialize@_Motor_B:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0xA
   245   00002D                     	ds	2
   246   00002F                     dc_motor_move_right@ret:
   247                           	callstack 0
   248   00002F                     dc_motor_move_left@ret:
   249                           	callstack 0
   250   00002F                     dc_motor_stop@ret:
   251                           	callstack 0
   252   00002F                     dc_motor_intialize@_Motor_A:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0xC
   256   00002F                     	ds	1
   257   000030                     dc_motor_move_right@_Motor_B:
   258                           	callstack 0
   259   000030                     dc_motor_move_left@_Motor_B:
   260                           	callstack 0
   261   000030                     dc_motor_stop@_Motor_B:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0xD
   265   000030                     	ds	2
   266   000032                     dc_motor_move_right@_Motor_A:
   267                           	callstack 0
   268   000032                     dc_motor_move_left@_Motor_A:
   269                           	callstack 0
   270   000032                     dc_motor_stop@_Motor_A:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xF
   274   000032                     	ds	2
   275   000034                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x11
   278   000034                     	ds	2
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 35 in file "ECAL_layer/Application.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  ret             1    0        unsigned char 
   290 ;;  logic_t         1    0        volatile unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  2  136[None  ] int 
   293 ;; Registers used:
   294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels required when called: 2
   306 ;; This function calls:
   307 ;;		_dc_motor_intialize
   308 ;;		_dc_motor_move_left
   309 ;;		_dc_motor_move_right
   310 ;;		_dc_motor_stop
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317   001922                     __ptext0:
   318                           	callstack 0
   319   001922                     _main:
   320                           	callstack 29
   321   001922  0E1F               	movlw	low _Motor
   322   001924  6E2A               	movwf	dc_motor_intialize@dc_motor_config^0,c
   323   001926  EC98  F00A         	call	_dc_motor_intialize	;wreg free
   324   00192A                     l137:
   325   00192A  0E1B               	movlw	low _Motor_1
   326   00192C  6E2B               	movwf	dc_motor_move_right@dc_motor_config^0,c
   327   00192E  0E00               	movlw	0
   328   001930  6E2C               	movwf	dc_motor_move_right@Motor_target^0,c
   329   001932  ECDE  F008         	call	_dc_motor_move_right	;wreg free
   330   001936                     
   331                           ;ECAL_layer/Application.c: 45: _delay((unsigned long)((1000)*(16000000U/4000.0)));
   332   001936  0E15               	movlw	21
   333   001938  6E35               	movwf	(??_main+1)^0,c
   334   00193A  0E4B               	movlw	75
   335   00193C  6E34               	movwf	??_main^0,c
   336   00193E  0EBE               	movlw	190
   337   001940                     u977:
   338   001940  2EE8               	decfsz	wreg,f,c
   339   001942  D7FE               	bra	u977
   340   001944  2E34               	decfsz	??_main^0,f,c
   341   001946  D7FC               	bra	u977
   342   001948  2E35               	decfsz	(??_main+1)^0,f,c
   343   00194A  D7FA               	bra	u977
   344   00194C  D000               	nop2	
   345   00194E  0E1B               	movlw	low _Motor_1
   346   001950  6E2B               	movwf	dc_motor_stop@dc_motor_config^0,c
   347   001952  0E00               	movlw	0
   348   001954  6E2C               	movwf	dc_motor_stop@Motor_target^0,c
   349   001956  EC01  F008         	call	_dc_motor_stop	;wreg free
   350                           
   351                           ;ECAL_layer/Application.c: 47: _delay((unsigned long)((1000)*(16000000U/4000.0)));
   352   00195A  0E15               	movlw	21
   353   00195C  6E35               	movwf	(??_main+1)^0,c
   354   00195E  0E4B               	movlw	75
   355   001960  6E34               	movwf	??_main^0,c
   356   001962  0EBE               	movlw	190
   357   001964                     u987:
   358   001964  2EE8               	decfsz	wreg,f,c
   359   001966  D7FE               	bra	u987
   360   001968  2E34               	decfsz	??_main^0,f,c
   361   00196A  D7FC               	bra	u987
   362   00196C  2E35               	decfsz	(??_main+1)^0,f,c
   363   00196E  D7FA               	bra	u987
   364   001970  D000               	nop2	
   365   001972  0E1B               	movlw	low _Motor_1
   366   001974  6E2B               	movwf	dc_motor_move_left@dc_motor_config^0,c
   367   001976  0E00               	movlw	0
   368   001978  6E2C               	movwf	dc_motor_move_left@Motor_target^0,c
   369   00197A  ECBB  F009         	call	_dc_motor_move_left	;wreg free
   370   00197E                     
   371                           ;ECAL_layer/Application.c: 49: _delay((unsigned long)((1000)*(16000000U/4000.0)));
   372   00197E  0E15               	movlw	21
   373   001980  6E35               	movwf	(??_main+1)^0,c
   374   001982  0E4B               	movlw	75
   375   001984  6E34               	movwf	??_main^0,c
   376   001986  0EBE               	movlw	190
   377   001988                     u997:
   378   001988  2EE8               	decfsz	wreg,f,c
   379   00198A  D7FE               	bra	u997
   380   00198C  2E34               	decfsz	??_main^0,f,c
   381   00198E  D7FC               	bra	u997
   382   001990  2E35               	decfsz	(??_main+1)^0,f,c
   383   001992  D7FA               	bra	u997
   384   001994  D000               	nop2	
   385   001996  EF95  F00C         	goto	l137
   386   00199A  EF00  F000         	goto	start
   387   00199E                     __end_of_main:
   388                           	callstack 0
   389                           
   390 ;; *************** function _dc_motor_stop *****************
   391 ;; Defined at:
   392 ;;		line 129 in file "ECAL_layer/DC_MOTOR/ecu_dc_motor.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  dc_motor_con    1    8[COMRAM] PTR struct .
   395 ;;		 -> Motor_1(4), 
   396 ;;  Motor_target    1    9[COMRAM] enum E2910
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  _Motor_A        2   15[COMRAM] struct .[2]
   399 ;;  _Motor_B        2   13[COMRAM] struct .[2]
   400 ;;  ret             1   12[COMRAM] unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      unsigned char 
   403 ;; Registers used:
   404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;Total ram usage:        9 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 1
   417 ;; This function calls:
   418 ;;		_gpio_pin_write_logic
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text1
   425   001002                     __ptext1:
   426                           	callstack 0
   427   001002                     _dc_motor_stop:
   428                           	callstack 29
   429   001002                     
   430                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 131:     pin_config_t _Motor_A[2]={{.pin=dc_motor_c
      +                          onfig->Motor_A_PIN[0].M_pin,
   431   001002  0E00               	movlw	0
   432   001004  6E33               	movwf	(dc_motor_stop@_Motor_A+1)^0,c
   433   001006  0E00               	movlw	0
   434   001008  6E32               	movwf	dc_motor_stop@_Motor_A^0,c
   435   00100A  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   436   00100C  6ED9               	movwf	fsr2l,c
   437   00100E  6ADA               	clrf	fsr2h,c
   438   001010  30DF               	rrcf	223,w,c
   439   001012  32E8               	rrcf	wreg,f,c
   440   001014  32E8               	rrcf	wreg,f,c
   441   001016  0B07               	andlw	7
   442   001018  6E2D               	movwf	??_dc_motor_stop^0,c
   443   00101A  5032               	movf	dc_motor_stop@_Motor_A^0,w,c
   444   00101C  182D               	xorwf	??_dc_motor_stop^0,w,c
   445   00101E  0BF8               	andlw	-8
   446   001020  182D               	xorwf	??_dc_motor_stop^0,w,c
   447   001022  6E32               	movwf	dc_motor_stop@_Motor_A^0,c
   448   001024  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   449   001026  6ED9               	movwf	fsr2l,c
   450   001028  6ADA               	clrf	fsr2h,c
   451   00102A  50DF               	movf	223,w,c
   452   00102C  0B07               	andlw	7
   453   00102E  6E2D               	movwf	??_dc_motor_stop^0,c
   454   001030  462D               	rlncf	??_dc_motor_stop^0,f,c
   455   001032  462D               	rlncf	??_dc_motor_stop^0,f,c
   456   001034  462D               	rlncf	??_dc_motor_stop^0,f,c
   457   001036  5032               	movf	dc_motor_stop@_Motor_A^0,w,c
   458   001038  182D               	xorwf	??_dc_motor_stop^0,w,c
   459   00103A  0BC7               	andlw	-57
   460   00103C  182D               	xorwf	??_dc_motor_stop^0,w,c
   461   00103E  6E32               	movwf	dc_motor_stop@_Motor_A^0,c
   462   001040  9C32               	bcf	dc_motor_stop@_Motor_A^0,6,c
   463   001042  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   464   001044  6ED9               	movwf	fsr2l,c
   465   001046  6ADA               	clrf	fsr2h,c
   466   001048  ACDF               	btfss	indf2,6,c
   467   00104A  D002               	bra	u865
   468   00104C  8E32               	bsf	dc_motor_stop@_Motor_A^0,7,c
   469   00104E  D001               	bra	u867
   470   001050                     u865:
   471   001050  9E32               	bcf	dc_motor_stop@_Motor_A^0,7,c
   472   001052                     u867:
   473   001052  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   474   001054  6ED9               	movwf	fsr2l,c
   475   001056  6ADA               	clrf	fsr2h,c
   476   001058  0E01               	movlw	1
   477   00105A  26D9               	addwf	fsr2l,f,c
   478   00105C  30DF               	rrcf	223,w,c
   479   00105E  32E8               	rrcf	wreg,f,c
   480   001060  32E8               	rrcf	wreg,f,c
   481   001062  0B07               	andlw	7
   482   001064  6E2D               	movwf	??_dc_motor_stop^0,c
   483   001066  5033               	movf	(dc_motor_stop@_Motor_A+1)^0,w,c
   484   001068  182D               	xorwf	??_dc_motor_stop^0,w,c
   485   00106A  0BF8               	andlw	-8
   486   00106C  182D               	xorwf	??_dc_motor_stop^0,w,c
   487   00106E  6E33               	movwf	(dc_motor_stop@_Motor_A+1)^0,c
   488   001070  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   489   001072  6ED9               	movwf	fsr2l,c
   490   001074  6ADA               	clrf	fsr2h,c
   491   001076  0E01               	movlw	1
   492   001078  26D9               	addwf	fsr2l,f,c
   493   00107A  50DF               	movf	223,w,c
   494   00107C  0B07               	andlw	7
   495   00107E  6E2D               	movwf	??_dc_motor_stop^0,c
   496   001080  462D               	rlncf	??_dc_motor_stop^0,f,c
   497   001082  462D               	rlncf	??_dc_motor_stop^0,f,c
   498   001084  462D               	rlncf	??_dc_motor_stop^0,f,c
   499   001086  5033               	movf	(dc_motor_stop@_Motor_A+1)^0,w,c
   500   001088  182D               	xorwf	??_dc_motor_stop^0,w,c
   501   00108A  0BC7               	andlw	-57
   502   00108C  182D               	xorwf	??_dc_motor_stop^0,w,c
   503   00108E  6E33               	movwf	(dc_motor_stop@_Motor_A+1)^0,c
   504   001090  9C33               	bcf	(dc_motor_stop@_Motor_A+1)^0,6,c
   505   001092  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   506   001094  6ED9               	movwf	fsr2l,c
   507   001096  6ADA               	clrf	fsr2h,c
   508   001098  0E01               	movlw	1
   509   00109A  26D9               	addwf	fsr2l,f,c
   510   00109C  ACDF               	btfss	indf2,6,c
   511   00109E  D002               	bra	u875
   512   0010A0  8E33               	bsf	(dc_motor_stop@_Motor_A+1)^0,7,c
   513   0010A2  D001               	bra	u877
   514   0010A4                     u875:
   515   0010A4  9E33               	bcf	(dc_motor_stop@_Motor_A+1)^0,7,c
   516   0010A6                     u877:
   517   0010A6                     
   518                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 140:        pin_config_t _Motor_B[2]={{.pin=dc_moto
      +                          r_config->Motor_B_PIN[0].M_pin,
   519   0010A6  0E00               	movlw	0
   520   0010A8  6E31               	movwf	(dc_motor_stop@_Motor_B+1)^0,c
   521   0010AA  0E00               	movlw	0
   522   0010AC  6E30               	movwf	dc_motor_stop@_Motor_B^0,c
   523   0010AE  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   524   0010B0  6ED9               	movwf	fsr2l,c
   525   0010B2  6ADA               	clrf	fsr2h,c
   526   0010B4  0E02               	movlw	2
   527   0010B6  26D9               	addwf	fsr2l,f,c
   528   0010B8  30DF               	rrcf	223,w,c
   529   0010BA  32E8               	rrcf	wreg,f,c
   530   0010BC  32E8               	rrcf	wreg,f,c
   531   0010BE  0B07               	andlw	7
   532   0010C0  6E2D               	movwf	??_dc_motor_stop^0,c
   533   0010C2  5030               	movf	dc_motor_stop@_Motor_B^0,w,c
   534   0010C4  182D               	xorwf	??_dc_motor_stop^0,w,c
   535   0010C6  0BF8               	andlw	-8
   536   0010C8  182D               	xorwf	??_dc_motor_stop^0,w,c
   537   0010CA  6E30               	movwf	dc_motor_stop@_Motor_B^0,c
   538   0010CC  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   539   0010CE  6ED9               	movwf	fsr2l,c
   540   0010D0  6ADA               	clrf	fsr2h,c
   541   0010D2  0E02               	movlw	2
   542   0010D4  26D9               	addwf	fsr2l,f,c
   543   0010D6  50DF               	movf	223,w,c
   544   0010D8  0B07               	andlw	7
   545   0010DA  6E2D               	movwf	??_dc_motor_stop^0,c
   546   0010DC  462D               	rlncf	??_dc_motor_stop^0,f,c
   547   0010DE  462D               	rlncf	??_dc_motor_stop^0,f,c
   548   0010E0  462D               	rlncf	??_dc_motor_stop^0,f,c
   549   0010E2  5030               	movf	dc_motor_stop@_Motor_B^0,w,c
   550   0010E4  182D               	xorwf	??_dc_motor_stop^0,w,c
   551   0010E6  0BC7               	andlw	-57
   552   0010E8  182D               	xorwf	??_dc_motor_stop^0,w,c
   553   0010EA  6E30               	movwf	dc_motor_stop@_Motor_B^0,c
   554   0010EC  9C30               	bcf	dc_motor_stop@_Motor_B^0,6,c
   555   0010EE  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   556   0010F0  6ED9               	movwf	fsr2l,c
   557   0010F2  6ADA               	clrf	fsr2h,c
   558   0010F4  0E02               	movlw	2
   559   0010F6  26D9               	addwf	fsr2l,f,c
   560   0010F8  ACDF               	btfss	indf2,6,c
   561   0010FA  D002               	bra	u885
   562   0010FC  8E30               	bsf	dc_motor_stop@_Motor_B^0,7,c
   563   0010FE  D001               	bra	u887
   564   001100                     u885:
   565   001100  9E30               	bcf	dc_motor_stop@_Motor_B^0,7,c
   566   001102                     u887:
   567   001102  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   568   001104  6ED9               	movwf	fsr2l,c
   569   001106  6ADA               	clrf	fsr2h,c
   570   001108  0E03               	movlw	3
   571   00110A  26D9               	addwf	fsr2l,f,c
   572   00110C  30DF               	rrcf	223,w,c
   573   00110E  32E8               	rrcf	wreg,f,c
   574   001110  32E8               	rrcf	wreg,f,c
   575   001112  0B07               	andlw	7
   576   001114  6E2D               	movwf	??_dc_motor_stop^0,c
   577   001116  5031               	movf	(dc_motor_stop@_Motor_B+1)^0,w,c
   578   001118  182D               	xorwf	??_dc_motor_stop^0,w,c
   579   00111A  0BF8               	andlw	-8
   580   00111C  182D               	xorwf	??_dc_motor_stop^0,w,c
   581   00111E  6E31               	movwf	(dc_motor_stop@_Motor_B+1)^0,c
   582   001120  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   583   001122  6ED9               	movwf	fsr2l,c
   584   001124  6ADA               	clrf	fsr2h,c
   585   001126  0E03               	movlw	3
   586   001128  26D9               	addwf	fsr2l,f,c
   587   00112A  50DF               	movf	223,w,c
   588   00112C  0B07               	andlw	7
   589   00112E  6E2D               	movwf	??_dc_motor_stop^0,c
   590   001130  462D               	rlncf	??_dc_motor_stop^0,f,c
   591   001132  462D               	rlncf	??_dc_motor_stop^0,f,c
   592   001134  462D               	rlncf	??_dc_motor_stop^0,f,c
   593   001136  5031               	movf	(dc_motor_stop@_Motor_B+1)^0,w,c
   594   001138  182D               	xorwf	??_dc_motor_stop^0,w,c
   595   00113A  0BC7               	andlw	-57
   596   00113C  182D               	xorwf	??_dc_motor_stop^0,w,c
   597   00113E  6E31               	movwf	(dc_motor_stop@_Motor_B+1)^0,c
   598   001140  9C31               	bcf	(dc_motor_stop@_Motor_B+1)^0,6,c
   599   001142  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   600   001144  6ED9               	movwf	fsr2l,c
   601   001146  6ADA               	clrf	fsr2h,c
   602   001148  0E03               	movlw	3
   603   00114A  26D9               	addwf	fsr2l,f,c
   604   00114C  ACDF               	btfss	indf2,6,c
   605   00114E  D002               	bra	u895
   606   001150  8E31               	bsf	(dc_motor_stop@_Motor_B+1)^0,7,c
   607   001152  D001               	bra	u897
   608   001154                     u895:
   609   001154  9E31               	bcf	(dc_motor_stop@_Motor_B+1)^0,7,c
   610   001156                     u897:
   611   001156                     
   612                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 151:   if((((void*)0)==dc_motor_config))
   613   001156  502B               	movf	dc_motor_stop@dc_motor_config^0,w,c
   614   001158  A4D8               	btfss	status,2,c
   615   00115A  EFB1  F008         	goto	u901
   616   00115E  EFB3  F008         	goto	u900
   617   001162                     u901:
   618   001162  EFC7  F008         	goto	l1551
   619   001166                     u900:
   620   001166                     l1543:
   621                           
   622                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 152:   {;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 153:  
      +                               ret=(STD_RetunType)0x00;
   623   001166  0E00               	movlw	0
   624   001168  6E2F               	movwf	dc_motor_stop@ret^0,c
   625                           
   626                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 154:   }
   627   00116A  EFDC  F008         	goto	l1553
   628   00116E                     l1545:
   629                           
   630                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 160:           {;ECAL_layer/DC_MOTOR/ecu_dc_motor.c
      +                          : 161:              ret= gpio_pin_write_logic(&_Motor_A[0],LOW);
   631   00116E  0E32               	movlw	low dc_motor_stop@_Motor_A
   632   001170  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   633   001172  0E00               	movlw	0
   634   001174  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   635   001176  ECFB  F00B         	call	_gpio_pin_write_logic	;wreg free
   636   00117A  6E2F               	movwf	dc_motor_stop@ret^0,c
   637                           
   638                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 162:              ret= gpio_pin_write_logic(&_Motor
      +                          _A[1],LOW);
   639   00117C  0E33               	movlw	low (dc_motor_stop@_Motor_A+1)
   640   00117E  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   641   001180  0E00               	movlw	0
   642   001182  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   643   001184  ECFB  F00B         	call	_gpio_pin_write_logic	;wreg free
   644   001188  6E2F               	movwf	dc_motor_stop@ret^0,c
   645                           
   646                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 163:           };ECAL_layer/DC_MOTOR/ecu_dc_motor.c
      +                          : 164:               break;
   647   00118A  EFDC  F008         	goto	l1553
   648   00118E                     l1551:
   649   00118E  502C               	movf	dc_motor_stop@Motor_target^0,w,c
   650   001190  6E2D               	movwf	??_dc_motor_stop^0,c
   651   001192  6A2E               	clrf	(??_dc_motor_stop+1)^0,c
   652                           
   653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   654                           ; Switch size 1, requested type "simple"
   655                           ; Number of cases is 1, Range of values is 0 to 0
   656                           ; switch strategies available:
   657                           ; Name         Instructions Cycles
   658                           ; simple_byte            4     3 (average)
   659                           ;	Chosen strategy is simple_byte
   660   001194  502E               	movf	(??_dc_motor_stop+1)^0,w,c
   661   001196  0A00               	xorlw	0	; case 0
   662   001198  B4D8               	btfsc	status,2,c
   663   00119A  EFD1  F008         	goto	l1667
   664   00119E  EFB3  F008         	goto	l1543
   665   0011A2                     l1667:
   666                           
   667                           ; Switch size 1, requested type "simple"
   668                           ; Number of cases is 2, Range of values is 0 to 1
   669                           ; switch strategies available:
   670                           ; Name         Instructions Cycles
   671                           ; simple_byte            7     4 (average)
   672                           ;	Chosen strategy is simple_byte
   673   0011A2  502D               	movf	??_dc_motor_stop^0,w,c
   674   0011A4  0A00               	xorlw	0	; case 0
   675   0011A6  B4D8               	btfsc	status,2,c
   676   0011A8  EFB7  F008         	goto	l1545
   677   0011AC  0A01               	xorlw	1	; case 1
   678   0011AE  B4D8               	btfsc	status,2,c
   679   0011B0  EFB7  F008         	goto	l1545
   680   0011B4  EFB3  F008         	goto	l1543
   681   0011B8                     l1553:
   682                           
   683                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 174:     return ret;
   684   0011B8  502F               	movf	dc_motor_stop@ret^0,w,c
   685   0011BA  0012               	return		;funcret
   686   0011BC                     __end_of_dc_motor_stop:
   687                           	callstack 0
   688                           
   689 ;; *************** function _dc_motor_move_right *****************
   690 ;; Defined at:
   691 ;;		line 40 in file "ECAL_layer/DC_MOTOR/ecu_dc_motor.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  dc_motor_con    1    8[COMRAM] PTR struct .
   694 ;;		 -> Motor_1(4), 
   695 ;;  Motor_target    1    9[COMRAM] enum E2910
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  _Motor_A        2   15[COMRAM] struct .[2]
   698 ;;  _Motor_B        2   13[COMRAM] struct .[2]
   699 ;;  ret             1   12[COMRAM] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      unsigned char 
   702 ;; Registers used:
   703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;Total ram usage:        9 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 1
   716 ;; This function calls:
   717 ;;		_gpio_pin_write_logic
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text2
   724   0011BC                     __ptext2:
   725                           	callstack 0
   726   0011BC                     _dc_motor_move_right:
   727                           	callstack 29
   728   0011BC                     
   729                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 42:     pin_config_t _Motor_A[2]={{.pin=dc_motor_co
      +                          nfig->Motor_A_PIN[0].M_pin,
   730   0011BC  0E00               	movlw	0
   731   0011BE  6E33               	movwf	(dc_motor_move_right@_Motor_A+1)^0,c
   732   0011C0  0E00               	movlw	0
   733   0011C2  6E32               	movwf	dc_motor_move_right@_Motor_A^0,c
   734   0011C4  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   735   0011C6  6ED9               	movwf	fsr2l,c
   736   0011C8  6ADA               	clrf	fsr2h,c
   737   0011CA  30DF               	rrcf	223,w,c
   738   0011CC  32E8               	rrcf	wreg,f,c
   739   0011CE  32E8               	rrcf	wreg,f,c
   740   0011D0  0B07               	andlw	7
   741   0011D2  6E2D               	movwf	??_dc_motor_move_right^0,c
   742   0011D4  5032               	movf	dc_motor_move_right@_Motor_A^0,w,c
   743   0011D6  182D               	xorwf	??_dc_motor_move_right^0,w,c
   744   0011D8  0BF8               	andlw	-8
   745   0011DA  182D               	xorwf	??_dc_motor_move_right^0,w,c
   746   0011DC  6E32               	movwf	dc_motor_move_right@_Motor_A^0,c
   747   0011DE  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   748   0011E0  6ED9               	movwf	fsr2l,c
   749   0011E2  6ADA               	clrf	fsr2h,c
   750   0011E4  50DF               	movf	223,w,c
   751   0011E6  0B07               	andlw	7
   752   0011E8  6E2D               	movwf	??_dc_motor_move_right^0,c
   753   0011EA  462D               	rlncf	??_dc_motor_move_right^0,f,c
   754   0011EC  462D               	rlncf	??_dc_motor_move_right^0,f,c
   755   0011EE  462D               	rlncf	??_dc_motor_move_right^0,f,c
   756   0011F0  5032               	movf	dc_motor_move_right@_Motor_A^0,w,c
   757   0011F2  182D               	xorwf	??_dc_motor_move_right^0,w,c
   758   0011F4  0BC7               	andlw	-57
   759   0011F6  182D               	xorwf	??_dc_motor_move_right^0,w,c
   760   0011F8  6E32               	movwf	dc_motor_move_right@_Motor_A^0,c
   761   0011FA  9C32               	bcf	dc_motor_move_right@_Motor_A^0,6,c
   762   0011FC  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   763   0011FE  6ED9               	movwf	fsr2l,c
   764   001200  6ADA               	clrf	fsr2h,c
   765   001202  ACDF               	btfss	indf2,6,c
   766   001204  D002               	bra	u815
   767   001206  8E32               	bsf	dc_motor_move_right@_Motor_A^0,7,c
   768   001208  D001               	bra	u817
   769   00120A                     u815:
   770   00120A  9E32               	bcf	dc_motor_move_right@_Motor_A^0,7,c
   771   00120C                     u817:
   772   00120C  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   773   00120E  6ED9               	movwf	fsr2l,c
   774   001210  6ADA               	clrf	fsr2h,c
   775   001212  0E01               	movlw	1
   776   001214  26D9               	addwf	fsr2l,f,c
   777   001216  30DF               	rrcf	223,w,c
   778   001218  32E8               	rrcf	wreg,f,c
   779   00121A  32E8               	rrcf	wreg,f,c
   780   00121C  0B07               	andlw	7
   781   00121E  6E2D               	movwf	??_dc_motor_move_right^0,c
   782   001220  5033               	movf	(dc_motor_move_right@_Motor_A+1)^0,w,c
   783   001222  182D               	xorwf	??_dc_motor_move_right^0,w,c
   784   001224  0BF8               	andlw	-8
   785   001226  182D               	xorwf	??_dc_motor_move_right^0,w,c
   786   001228  6E33               	movwf	(dc_motor_move_right@_Motor_A+1)^0,c
   787   00122A  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   788   00122C  6ED9               	movwf	fsr2l,c
   789   00122E  6ADA               	clrf	fsr2h,c
   790   001230  0E01               	movlw	1
   791   001232  26D9               	addwf	fsr2l,f,c
   792   001234  50DF               	movf	223,w,c
   793   001236  0B07               	andlw	7
   794   001238  6E2D               	movwf	??_dc_motor_move_right^0,c
   795   00123A  462D               	rlncf	??_dc_motor_move_right^0,f,c
   796   00123C  462D               	rlncf	??_dc_motor_move_right^0,f,c
   797   00123E  462D               	rlncf	??_dc_motor_move_right^0,f,c
   798   001240  5033               	movf	(dc_motor_move_right@_Motor_A+1)^0,w,c
   799   001242  182D               	xorwf	??_dc_motor_move_right^0,w,c
   800   001244  0BC7               	andlw	-57
   801   001246  182D               	xorwf	??_dc_motor_move_right^0,w,c
   802   001248  6E33               	movwf	(dc_motor_move_right@_Motor_A+1)^0,c
   803   00124A  9C33               	bcf	(dc_motor_move_right@_Motor_A+1)^0,6,c
   804   00124C  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   805   00124E  6ED9               	movwf	fsr2l,c
   806   001250  6ADA               	clrf	fsr2h,c
   807   001252  0E01               	movlw	1
   808   001254  26D9               	addwf	fsr2l,f,c
   809   001256  ACDF               	btfss	indf2,6,c
   810   001258  D002               	bra	u825
   811   00125A  8E33               	bsf	(dc_motor_move_right@_Motor_A+1)^0,7,c
   812   00125C  D001               	bra	u827
   813   00125E                     u825:
   814   00125E  9E33               	bcf	(dc_motor_move_right@_Motor_A+1)^0,7,c
   815   001260                     u827:
   816   001260                     
   817                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 51:        pin_config_t _Motor_B[2]={{.pin=dc_motor
      +                          _config->Motor_B_PIN[0].M_pin,
   818   001260  0E00               	movlw	0
   819   001262  6E31               	movwf	(dc_motor_move_right@_Motor_B+1)^0,c
   820   001264  0E00               	movlw	0
   821   001266  6E30               	movwf	dc_motor_move_right@_Motor_B^0,c
   822   001268  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   823   00126A  6ED9               	movwf	fsr2l,c
   824   00126C  6ADA               	clrf	fsr2h,c
   825   00126E  0E02               	movlw	2
   826   001270  26D9               	addwf	fsr2l,f,c
   827   001272  30DF               	rrcf	223,w,c
   828   001274  32E8               	rrcf	wreg,f,c
   829   001276  32E8               	rrcf	wreg,f,c
   830   001278  0B07               	andlw	7
   831   00127A  6E2D               	movwf	??_dc_motor_move_right^0,c
   832   00127C  5030               	movf	dc_motor_move_right@_Motor_B^0,w,c
   833   00127E  182D               	xorwf	??_dc_motor_move_right^0,w,c
   834   001280  0BF8               	andlw	-8
   835   001282  182D               	xorwf	??_dc_motor_move_right^0,w,c
   836   001284  6E30               	movwf	dc_motor_move_right@_Motor_B^0,c
   837   001286  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   838   001288  6ED9               	movwf	fsr2l,c
   839   00128A  6ADA               	clrf	fsr2h,c
   840   00128C  0E02               	movlw	2
   841   00128E  26D9               	addwf	fsr2l,f,c
   842   001290  50DF               	movf	223,w,c
   843   001292  0B07               	andlw	7
   844   001294  6E2D               	movwf	??_dc_motor_move_right^0,c
   845   001296  462D               	rlncf	??_dc_motor_move_right^0,f,c
   846   001298  462D               	rlncf	??_dc_motor_move_right^0,f,c
   847   00129A  462D               	rlncf	??_dc_motor_move_right^0,f,c
   848   00129C  5030               	movf	dc_motor_move_right@_Motor_B^0,w,c
   849   00129E  182D               	xorwf	??_dc_motor_move_right^0,w,c
   850   0012A0  0BC7               	andlw	-57
   851   0012A2  182D               	xorwf	??_dc_motor_move_right^0,w,c
   852   0012A4  6E30               	movwf	dc_motor_move_right@_Motor_B^0,c
   853   0012A6  9C30               	bcf	dc_motor_move_right@_Motor_B^0,6,c
   854   0012A8  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   855   0012AA  6ED9               	movwf	fsr2l,c
   856   0012AC  6ADA               	clrf	fsr2h,c
   857   0012AE  0E02               	movlw	2
   858   0012B0  26D9               	addwf	fsr2l,f,c
   859   0012B2  ACDF               	btfss	indf2,6,c
   860   0012B4  D002               	bra	u835
   861   0012B6  8E30               	bsf	dc_motor_move_right@_Motor_B^0,7,c
   862   0012B8  D001               	bra	u837
   863   0012BA                     u835:
   864   0012BA  9E30               	bcf	dc_motor_move_right@_Motor_B^0,7,c
   865   0012BC                     u837:
   866   0012BC  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   867   0012BE  6ED9               	movwf	fsr2l,c
   868   0012C0  6ADA               	clrf	fsr2h,c
   869   0012C2  0E03               	movlw	3
   870   0012C4  26D9               	addwf	fsr2l,f,c
   871   0012C6  30DF               	rrcf	223,w,c
   872   0012C8  32E8               	rrcf	wreg,f,c
   873   0012CA  32E8               	rrcf	wreg,f,c
   874   0012CC  0B07               	andlw	7
   875   0012CE  6E2D               	movwf	??_dc_motor_move_right^0,c
   876   0012D0  5031               	movf	(dc_motor_move_right@_Motor_B+1)^0,w,c
   877   0012D2  182D               	xorwf	??_dc_motor_move_right^0,w,c
   878   0012D4  0BF8               	andlw	-8
   879   0012D6  182D               	xorwf	??_dc_motor_move_right^0,w,c
   880   0012D8  6E31               	movwf	(dc_motor_move_right@_Motor_B+1)^0,c
   881   0012DA  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   882   0012DC  6ED9               	movwf	fsr2l,c
   883   0012DE  6ADA               	clrf	fsr2h,c
   884   0012E0  0E03               	movlw	3
   885   0012E2  26D9               	addwf	fsr2l,f,c
   886   0012E4  50DF               	movf	223,w,c
   887   0012E6  0B07               	andlw	7
   888   0012E8  6E2D               	movwf	??_dc_motor_move_right^0,c
   889   0012EA  462D               	rlncf	??_dc_motor_move_right^0,f,c
   890   0012EC  462D               	rlncf	??_dc_motor_move_right^0,f,c
   891   0012EE  462D               	rlncf	??_dc_motor_move_right^0,f,c
   892   0012F0  5031               	movf	(dc_motor_move_right@_Motor_B+1)^0,w,c
   893   0012F2  182D               	xorwf	??_dc_motor_move_right^0,w,c
   894   0012F4  0BC7               	andlw	-57
   895   0012F6  182D               	xorwf	??_dc_motor_move_right^0,w,c
   896   0012F8  6E31               	movwf	(dc_motor_move_right@_Motor_B+1)^0,c
   897   0012FA  9C31               	bcf	(dc_motor_move_right@_Motor_B+1)^0,6,c
   898   0012FC  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   899   0012FE  6ED9               	movwf	fsr2l,c
   900   001300  6ADA               	clrf	fsr2h,c
   901   001302  0E03               	movlw	3
   902   001304  26D9               	addwf	fsr2l,f,c
   903   001306  ACDF               	btfss	indf2,6,c
   904   001308  D002               	bra	u845
   905   00130A  8E31               	bsf	(dc_motor_move_right@_Motor_B+1)^0,7,c
   906   00130C  D001               	bra	u847
   907   00130E                     u845:
   908   00130E  9E31               	bcf	(dc_motor_move_right@_Motor_B+1)^0,7,c
   909   001310                     u847:
   910   001310                     
   911                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 62:   if((((void*)0)==dc_motor_config))
   912   001310  502B               	movf	dc_motor_move_right@dc_motor_config^0,w,c
   913   001312  A4D8               	btfss	status,2,c
   914   001314  EF8E  F009         	goto	u851
   915   001318  EF90  F009         	goto	u850
   916   00131C                     u851:
   917   00131C  EFA4  F009         	goto	l1495
   918   001320                     u850:
   919   001320                     l1487:
   920                           
   921                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 63:   {;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 64:    
      +                             ret=(STD_RetunType)0x00;
   922   001320  0E00               	movlw	0
   923   001322  6E2F               	movwf	dc_motor_move_right@ret^0,c
   924                           
   925                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 65:   }
   926   001324  EFB9  F009         	goto	l1497
   927   001328                     l1489:
   928                           
   929                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 71:              ret= gpio_pin_write_logic(&_Motor_
      +                          A[0],HIGH);
   930   001328  0E32               	movlw	low dc_motor_move_right@_Motor_A
   931   00132A  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   932   00132C  0E01               	movlw	1
   933   00132E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   934   001330  ECFB  F00B         	call	_gpio_pin_write_logic	;wreg free
   935   001334  6E2F               	movwf	dc_motor_move_right@ret^0,c
   936                           
   937                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 72:              ret= gpio_pin_write_logic(&_Motor_
      +                          A[1],LOW);
   938   001336  0E33               	movlw	low (dc_motor_move_right@_Motor_A+1)
   939   001338  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   940   00133A  0E00               	movlw	0
   941   00133C  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   942   00133E  ECFB  F00B         	call	_gpio_pin_write_logic	;wreg free
   943   001342  6E2F               	movwf	dc_motor_move_right@ret^0,c
   944                           
   945                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 73:               break;
   946   001344  EFB9  F009         	goto	l1497
   947   001348                     l1495:
   948   001348  502C               	movf	dc_motor_move_right@Motor_target^0,w,c
   949   00134A  6E2D               	movwf	??_dc_motor_move_right^0,c
   950   00134C  6A2E               	clrf	(??_dc_motor_move_right+1)^0,c
   951                           
   952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   953                           ; Switch size 1, requested type "simple"
   954                           ; Number of cases is 1, Range of values is 0 to 0
   955                           ; switch strategies available:
   956                           ; Name         Instructions Cycles
   957                           ; simple_byte            4     3 (average)
   958                           ;	Chosen strategy is simple_byte
   959   00134E  502E               	movf	(??_dc_motor_move_right+1)^0,w,c
   960   001350  0A00               	xorlw	0	; case 0
   961   001352  B4D8               	btfsc	status,2,c
   962   001354  EFAE  F009         	goto	l1669
   963   001358  EF90  F009         	goto	l1487
   964   00135C                     l1669:
   965                           
   966                           ; Switch size 1, requested type "simple"
   967                           ; Number of cases is 2, Range of values is 0 to 1
   968                           ; switch strategies available:
   969                           ; Name         Instructions Cycles
   970                           ; simple_byte            7     4 (average)
   971                           ;	Chosen strategy is simple_byte
   972   00135C  502D               	movf	??_dc_motor_move_right^0,w,c
   973   00135E  0A00               	xorlw	0	; case 0
   974   001360  B4D8               	btfsc	status,2,c
   975   001362  EF94  F009         	goto	l1489
   976   001366  0A01               	xorlw	1	; case 1
   977   001368  B4D8               	btfsc	status,2,c
   978   00136A  EF94  F009         	goto	l1489
   979   00136E  EF90  F009         	goto	l1487
   980   001372                     l1497:
   981                           
   982                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 82:     return ret;
   983   001372  502F               	movf	dc_motor_move_right@ret^0,w,c
   984   001374  0012               	return		;funcret
   985   001376                     __end_of_dc_motor_move_right:
   986                           	callstack 0
   987                           
   988 ;; *************** function _dc_motor_move_left *****************
   989 ;; Defined at:
   990 ;;		line 84 in file "ECAL_layer/DC_MOTOR/ecu_dc_motor.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  dc_motor_con    1    8[COMRAM] PTR struct .
   993 ;;		 -> Motor_1(4), 
   994 ;;  Motor_target    1    9[COMRAM] enum E2910
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  _Motor_A        2   15[COMRAM] struct .[2]
   997 ;;  _Motor_B        2   13[COMRAM] struct .[2]
   998 ;;  ret             1   12[COMRAM] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      unsigned char 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        9 bytes
  1013 ;; Hardware stack levels used: 1
  1014 ;; Hardware stack levels required when called: 1
  1015 ;; This function calls:
  1016 ;;		_gpio_pin_write_logic
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text3
  1023   001376                     __ptext3:
  1024                           	callstack 0
  1025   001376                     _dc_motor_move_left:
  1026                           	callstack 29
  1027   001376                     
  1028                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 86:     pin_config_t _Motor_A[2]={{.pin=dc_motor_co
      +                          nfig->Motor_A_PIN[0].M_pin,
  1029   001376  0E00               	movlw	0
  1030   001378  6E33               	movwf	(dc_motor_move_left@_Motor_A+1)^0,c
  1031   00137A  0E00               	movlw	0
  1032   00137C  6E32               	movwf	dc_motor_move_left@_Motor_A^0,c
  1033   00137E  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1034   001380  6ED9               	movwf	fsr2l,c
  1035   001382  6ADA               	clrf	fsr2h,c
  1036   001384  30DF               	rrcf	223,w,c
  1037   001386  32E8               	rrcf	wreg,f,c
  1038   001388  32E8               	rrcf	wreg,f,c
  1039   00138A  0B07               	andlw	7
  1040   00138C  6E2D               	movwf	??_dc_motor_move_left^0,c
  1041   00138E  5032               	movf	dc_motor_move_left@_Motor_A^0,w,c
  1042   001390  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1043   001392  0BF8               	andlw	-8
  1044   001394  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1045   001396  6E32               	movwf	dc_motor_move_left@_Motor_A^0,c
  1046   001398  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1047   00139A  6ED9               	movwf	fsr2l,c
  1048   00139C  6ADA               	clrf	fsr2h,c
  1049   00139E  50DF               	movf	223,w,c
  1050   0013A0  0B07               	andlw	7
  1051   0013A2  6E2D               	movwf	??_dc_motor_move_left^0,c
  1052   0013A4  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1053   0013A6  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1054   0013A8  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1055   0013AA  5032               	movf	dc_motor_move_left@_Motor_A^0,w,c
  1056   0013AC  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1057   0013AE  0BC7               	andlw	-57
  1058   0013B0  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1059   0013B2  6E32               	movwf	dc_motor_move_left@_Motor_A^0,c
  1060   0013B4  9C32               	bcf	dc_motor_move_left@_Motor_A^0,6,c
  1061   0013B6  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1062   0013B8  6ED9               	movwf	fsr2l,c
  1063   0013BA  6ADA               	clrf	fsr2h,c
  1064   0013BC  ACDF               	btfss	indf2,6,c
  1065   0013BE  D002               	bra	u915
  1066   0013C0  8E32               	bsf	dc_motor_move_left@_Motor_A^0,7,c
  1067   0013C2  D001               	bra	u917
  1068   0013C4                     u915:
  1069   0013C4  9E32               	bcf	dc_motor_move_left@_Motor_A^0,7,c
  1070   0013C6                     u917:
  1071   0013C6  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1072   0013C8  6ED9               	movwf	fsr2l,c
  1073   0013CA  6ADA               	clrf	fsr2h,c
  1074   0013CC  0E01               	movlw	1
  1075   0013CE  26D9               	addwf	fsr2l,f,c
  1076   0013D0  30DF               	rrcf	223,w,c
  1077   0013D2  32E8               	rrcf	wreg,f,c
  1078   0013D4  32E8               	rrcf	wreg,f,c
  1079   0013D6  0B07               	andlw	7
  1080   0013D8  6E2D               	movwf	??_dc_motor_move_left^0,c
  1081   0013DA  5033               	movf	(dc_motor_move_left@_Motor_A+1)^0,w,c
  1082   0013DC  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1083   0013DE  0BF8               	andlw	-8
  1084   0013E0  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1085   0013E2  6E33               	movwf	(dc_motor_move_left@_Motor_A+1)^0,c
  1086   0013E4  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1087   0013E6  6ED9               	movwf	fsr2l,c
  1088   0013E8  6ADA               	clrf	fsr2h,c
  1089   0013EA  0E01               	movlw	1
  1090   0013EC  26D9               	addwf	fsr2l,f,c
  1091   0013EE  50DF               	movf	223,w,c
  1092   0013F0  0B07               	andlw	7
  1093   0013F2  6E2D               	movwf	??_dc_motor_move_left^0,c
  1094   0013F4  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1095   0013F6  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1096   0013F8  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1097   0013FA  5033               	movf	(dc_motor_move_left@_Motor_A+1)^0,w,c
  1098   0013FC  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1099   0013FE  0BC7               	andlw	-57
  1100   001400  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1101   001402  6E33               	movwf	(dc_motor_move_left@_Motor_A+1)^0,c
  1102   001404  9C33               	bcf	(dc_motor_move_left@_Motor_A+1)^0,6,c
  1103   001406  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1104   001408  6ED9               	movwf	fsr2l,c
  1105   00140A  6ADA               	clrf	fsr2h,c
  1106   00140C  0E01               	movlw	1
  1107   00140E  26D9               	addwf	fsr2l,f,c
  1108   001410  ACDF               	btfss	indf2,6,c
  1109   001412  D002               	bra	u925
  1110   001414  8E33               	bsf	(dc_motor_move_left@_Motor_A+1)^0,7,c
  1111   001416  D001               	bra	u927
  1112   001418                     u925:
  1113   001418  9E33               	bcf	(dc_motor_move_left@_Motor_A+1)^0,7,c
  1114   00141A                     u927:
  1115   00141A                     
  1116                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 95:        pin_config_t _Motor_B[2]={{.pin=dc_motor
      +                          _config->Motor_B_PIN[0].M_pin,
  1117   00141A  0E00               	movlw	0
  1118   00141C  6E31               	movwf	(dc_motor_move_left@_Motor_B+1)^0,c
  1119   00141E  0E00               	movlw	0
  1120   001420  6E30               	movwf	dc_motor_move_left@_Motor_B^0,c
  1121   001422  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1122   001424  6ED9               	movwf	fsr2l,c
  1123   001426  6ADA               	clrf	fsr2h,c
  1124   001428  0E02               	movlw	2
  1125   00142A  26D9               	addwf	fsr2l,f,c
  1126   00142C  30DF               	rrcf	223,w,c
  1127   00142E  32E8               	rrcf	wreg,f,c
  1128   001430  32E8               	rrcf	wreg,f,c
  1129   001432  0B07               	andlw	7
  1130   001434  6E2D               	movwf	??_dc_motor_move_left^0,c
  1131   001436  5030               	movf	dc_motor_move_left@_Motor_B^0,w,c
  1132   001438  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1133   00143A  0BF8               	andlw	-8
  1134   00143C  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1135   00143E  6E30               	movwf	dc_motor_move_left@_Motor_B^0,c
  1136   001440  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1137   001442  6ED9               	movwf	fsr2l,c
  1138   001444  6ADA               	clrf	fsr2h,c
  1139   001446  0E02               	movlw	2
  1140   001448  26D9               	addwf	fsr2l,f,c
  1141   00144A  50DF               	movf	223,w,c
  1142   00144C  0B07               	andlw	7
  1143   00144E  6E2D               	movwf	??_dc_motor_move_left^0,c
  1144   001450  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1145   001452  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1146   001454  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1147   001456  5030               	movf	dc_motor_move_left@_Motor_B^0,w,c
  1148   001458  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1149   00145A  0BC7               	andlw	-57
  1150   00145C  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1151   00145E  6E30               	movwf	dc_motor_move_left@_Motor_B^0,c
  1152   001460  9C30               	bcf	dc_motor_move_left@_Motor_B^0,6,c
  1153   001462  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1154   001464  6ED9               	movwf	fsr2l,c
  1155   001466  6ADA               	clrf	fsr2h,c
  1156   001468  0E02               	movlw	2
  1157   00146A  26D9               	addwf	fsr2l,f,c
  1158   00146C  ACDF               	btfss	indf2,6,c
  1159   00146E  D002               	bra	u935
  1160   001470  8E30               	bsf	dc_motor_move_left@_Motor_B^0,7,c
  1161   001472  D001               	bra	u937
  1162   001474                     u935:
  1163   001474  9E30               	bcf	dc_motor_move_left@_Motor_B^0,7,c
  1164   001476                     u937:
  1165   001476  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1166   001478  6ED9               	movwf	fsr2l,c
  1167   00147A  6ADA               	clrf	fsr2h,c
  1168   00147C  0E03               	movlw	3
  1169   00147E  26D9               	addwf	fsr2l,f,c
  1170   001480  30DF               	rrcf	223,w,c
  1171   001482  32E8               	rrcf	wreg,f,c
  1172   001484  32E8               	rrcf	wreg,f,c
  1173   001486  0B07               	andlw	7
  1174   001488  6E2D               	movwf	??_dc_motor_move_left^0,c
  1175   00148A  5031               	movf	(dc_motor_move_left@_Motor_B+1)^0,w,c
  1176   00148C  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1177   00148E  0BF8               	andlw	-8
  1178   001490  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1179   001492  6E31               	movwf	(dc_motor_move_left@_Motor_B+1)^0,c
  1180   001494  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1181   001496  6ED9               	movwf	fsr2l,c
  1182   001498  6ADA               	clrf	fsr2h,c
  1183   00149A  0E03               	movlw	3
  1184   00149C  26D9               	addwf	fsr2l,f,c
  1185   00149E  50DF               	movf	223,w,c
  1186   0014A0  0B07               	andlw	7
  1187   0014A2  6E2D               	movwf	??_dc_motor_move_left^0,c
  1188   0014A4  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1189   0014A6  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1190   0014A8  462D               	rlncf	??_dc_motor_move_left^0,f,c
  1191   0014AA  5031               	movf	(dc_motor_move_left@_Motor_B+1)^0,w,c
  1192   0014AC  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1193   0014AE  0BC7               	andlw	-57
  1194   0014B0  182D               	xorwf	??_dc_motor_move_left^0,w,c
  1195   0014B2  6E31               	movwf	(dc_motor_move_left@_Motor_B+1)^0,c
  1196   0014B4  9C31               	bcf	(dc_motor_move_left@_Motor_B+1)^0,6,c
  1197   0014B6  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1198   0014B8  6ED9               	movwf	fsr2l,c
  1199   0014BA  6ADA               	clrf	fsr2h,c
  1200   0014BC  0E03               	movlw	3
  1201   0014BE  26D9               	addwf	fsr2l,f,c
  1202   0014C0  ACDF               	btfss	indf2,6,c
  1203   0014C2  D002               	bra	u945
  1204   0014C4  8E31               	bsf	(dc_motor_move_left@_Motor_B+1)^0,7,c
  1205   0014C6  D001               	bra	u947
  1206   0014C8                     u945:
  1207   0014C8  9E31               	bcf	(dc_motor_move_left@_Motor_B+1)^0,7,c
  1208   0014CA                     u947:
  1209   0014CA                     
  1210                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 106:   if((((void*)0)==dc_motor_config))
  1211   0014CA  502B               	movf	dc_motor_move_left@dc_motor_config^0,w,c
  1212   0014CC  A4D8               	btfss	status,2,c
  1213   0014CE  EF6B  F00A         	goto	u951
  1214   0014D2  EF6D  F00A         	goto	u950
  1215   0014D6                     u951:
  1216   0014D6  EF81  F00A         	goto	l1607
  1217   0014DA                     u950:
  1218   0014DA                     l1599:
  1219                           
  1220                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 107:   {;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 108:  
      +                               ret=(STD_RetunType)0x00;
  1221   0014DA  0E00               	movlw	0
  1222   0014DC  6E2F               	movwf	dc_motor_move_left@ret^0,c
  1223                           
  1224                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 109:   }
  1225   0014DE  EF96  F00A         	goto	l1609
  1226   0014E2                     l1601:
  1227                           
  1228                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 115:              ret= gpio_pin_write_logic(&_Motor
      +                          _A[0],LOW);
  1229   0014E2  0E32               	movlw	low dc_motor_move_left@_Motor_A
  1230   0014E4  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1231   0014E6  0E00               	movlw	0
  1232   0014E8  6E24               	movwf	gpio_pin_write_logic@logic^0,c
  1233   0014EA  ECFB  F00B         	call	_gpio_pin_write_logic	;wreg free
  1234   0014EE  6E2F               	movwf	dc_motor_move_left@ret^0,c
  1235                           
  1236                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 116:              ret= gpio_pin_write_logic(&_Motor
      +                          _A[1],HIGH);
  1237   0014F0  0E33               	movlw	low (dc_motor_move_left@_Motor_A+1)
  1238   0014F2  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1239   0014F4  0E01               	movlw	1
  1240   0014F6  6E24               	movwf	gpio_pin_write_logic@logic^0,c
  1241   0014F8  ECFB  F00B         	call	_gpio_pin_write_logic	;wreg free
  1242   0014FC  6E2F               	movwf	dc_motor_move_left@ret^0,c
  1243                           
  1244                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 117:               break;
  1245   0014FE  EF96  F00A         	goto	l1609
  1246   001502                     l1607:
  1247   001502  502C               	movf	dc_motor_move_left@Motor_target^0,w,c
  1248   001504  6E2D               	movwf	??_dc_motor_move_left^0,c
  1249   001506  6A2E               	clrf	(??_dc_motor_move_left+1)^0,c
  1250                           
  1251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 1, Range of values is 0 to 0
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte            4     3 (average)
  1257                           ;	Chosen strategy is simple_byte
  1258   001508  502E               	movf	(??_dc_motor_move_left+1)^0,w,c
  1259   00150A  0A00               	xorlw	0	; case 0
  1260   00150C  B4D8               	btfsc	status,2,c
  1261   00150E  EF8B  F00A         	goto	l1671
  1262   001512  EF6D  F00A         	goto	l1599
  1263   001516                     l1671:
  1264                           
  1265                           ; Switch size 1, requested type "simple"
  1266                           ; Number of cases is 2, Range of values is 0 to 1
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte            7     4 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271   001516  502D               	movf	??_dc_motor_move_left^0,w,c
  1272   001518  0A00               	xorlw	0	; case 0
  1273   00151A  B4D8               	btfsc	status,2,c
  1274   00151C  EF71  F00A         	goto	l1601
  1275   001520  0A01               	xorlw	1	; case 1
  1276   001522  B4D8               	btfsc	status,2,c
  1277   001524  EF71  F00A         	goto	l1601
  1278   001528  EF6D  F00A         	goto	l1599
  1279   00152C                     l1609:
  1280                           
  1281                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 126:     return ret;
  1282   00152C  502F               	movf	dc_motor_move_left@ret^0,w,c
  1283   00152E  0012               	return		;funcret
  1284   001530                     __end_of_dc_motor_move_left:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _gpio_pin_write_logic *****************
  1288 ;; Defined at:
  1289 ;;		line 72 in file "ECAL_layer/PIC18f_MCAL_gpio.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1292 ;;		 -> dc_motor_stop@_Motor_A(2), dc_motor_move_left@_Motor_A(2), dc_motor_move_right@_Motor_A(2), 
  1293 ;;  logic           1    1[COMRAM] enum E2809
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  ret             1    7[COMRAM] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      unsigned char 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;Total ram usage:        8 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_dc_motor_move_right
  1315 ;;		_dc_motor_move_left
  1316 ;;		_dc_motor_stop
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text4
  1321   0017F6                     __ptext4:
  1322                           	callstack 0
  1323   0017F6                     _gpio_pin_write_logic:
  1324                           	callstack 29
  1325   0017F6                     
  1326                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 73:         uint8_t ret=(STD_RetunType)0x01 ;
  1327   0017F6  0E01               	movlw	1
  1328   0017F8  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
  1329                           
  1330                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 74:     if((_pin_config==((void*)0))||(_pin_config->pin>
      +                          7)||(_pin_config->port>5))
  1331   0017FA  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1332   0017FC  B4D8               	btfsc	status,2,c
  1333   0017FE  EF03  F00C         	goto	u711
  1334   001802  EF05  F00C         	goto	u710
  1335   001806                     u711:
  1336   001806  EF23  F00C         	goto	l1385
  1337   00180A                     u710:
  1338   00180A  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1339   00180C  6ED9               	movwf	fsr2l,c
  1340   00180E  6ADA               	clrf	fsr2h,c
  1341   001810  30DF               	rrcf	223,w,c
  1342   001812  32E8               	rrcf	wreg,f,c
  1343   001814  32E8               	rrcf	wreg,f,c
  1344   001816  0B07               	andlw	7
  1345   001818  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1346   00181A  0E08               	movlw	8
  1347   00181C  6025               	cpfslt	??_gpio_pin_write_logic^0,c
  1348   00181E  EF13  F00C         	goto	u721
  1349   001822  EF15  F00C         	goto	u720
  1350   001826                     u721:
  1351   001826  EF23  F00C         	goto	l1385
  1352   00182A                     u720:
  1353   00182A  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1354   00182C  6ED9               	movwf	fsr2l,c
  1355   00182E  6ADA               	clrf	fsr2h,c
  1356   001830  50DF               	movf	223,w,c
  1357   001832  0B07               	andlw	7
  1358   001834  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1359   001836  0E05               	movlw	5
  1360   001838  6425               	cpfsgt	??_gpio_pin_write_logic^0,c
  1361   00183A  EF21  F00C         	goto	u731
  1362   00183E  EF23  F00C         	goto	u730
  1363   001842                     u731:
  1364   001842  EF7A  F00C         	goto	l1393
  1365   001846                     u730:
  1366   001846                     l1385:
  1367                           
  1368                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 75:     {;ECAL_layer/PIC18f_MCAL_gpio.c: 76:         ret
      +                          =(STD_RetunType)0x00 ;
  1369   001846  0E00               	movlw	0
  1370   001848  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
  1371                           
  1372                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 78:     }
  1373   00184A  EF8F  F00C         	goto	l1395
  1374   00184E                     l1387:
  1375                           
  1376                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 84:          (*lat_reg[_pin_config->port]&=~((uint8_t)1 
      +                          <<_pin_config->pin));
  1377   00184E  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1378   001850  6ED9               	movwf	fsr2l,c
  1379   001852  6ADA               	clrf	fsr2h,c
  1380   001854  30DF               	rrcf	223,w,c
  1381   001856  32E8               	rrcf	wreg,f,c
  1382   001858  32E8               	rrcf	wreg,f,c
  1383   00185A  0B07               	andlw	7
  1384   00185C  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1385   00185E  0E01               	movlw	1
  1386   001860  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1387   001862  2A25               	incf	??_gpio_pin_write_logic^0,f,c
  1388   001864  EF36  F00C         	goto	u744
  1389   001868                     u745:
  1390   001868  90D8               	bcf	status,0,c
  1391   00186A  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1392   00186C                     u744:
  1393   00186C  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1394   00186E  EF34  F00C         	goto	u745
  1395   001872  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1396   001874  0AFF               	xorlw	255
  1397   001876  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1398   001878  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1399   00187A  6ED9               	movwf	fsr2l,c
  1400   00187C  6ADA               	clrf	fsr2h,c
  1401   00187E  50DF               	movf	223,w,c
  1402   001880  0B07               	andlw	7
  1403   001882  0D02               	mullw	2
  1404   001884  50F3               	movf	243,w,c
  1405   001886  0F01               	addlw	low _lat_reg
  1406   001888  6ED9               	movwf	fsr2l,c
  1407   00188A  6ADA               	clrf	fsr2h,c
  1408   00188C  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
  1409   001890  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
  1410   001894  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1411   001898  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1412   00189C  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1413   00189E  16DF               	andwf	indf2,f,c
  1414                           
  1415                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 85:                 break;
  1416   0018A0  EF8F  F00C         	goto	l1395
  1417   0018A4                     l1389:
  1418                           
  1419                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 87:               (*lat_reg[_pin_config->port]|=((uint8_
      +                          t)1 <<_pin_config->pin));
  1420   0018A4  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1421   0018A6  6ED9               	movwf	fsr2l,c
  1422   0018A8  6ADA               	clrf	fsr2h,c
  1423   0018AA  30DF               	rrcf	223,w,c
  1424   0018AC  32E8               	rrcf	wreg,f,c
  1425   0018AE  32E8               	rrcf	wreg,f,c
  1426   0018B0  0B07               	andlw	7
  1427   0018B2  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1428   0018B4  0E01               	movlw	1
  1429   0018B6  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1430   0018B8  2A25               	incf	??_gpio_pin_write_logic^0,f,c
  1431   0018BA  EF61  F00C         	goto	u754
  1432   0018BE                     u755:
  1433   0018BE  90D8               	bcf	status,0,c
  1434   0018C0  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1435   0018C2                     u754:
  1436   0018C2  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1437   0018C4  EF5F  F00C         	goto	u755
  1438   0018C8  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1439   0018CA  6ED9               	movwf	fsr2l,c
  1440   0018CC  6ADA               	clrf	fsr2h,c
  1441   0018CE  50DF               	movf	223,w,c
  1442   0018D0  0B07               	andlw	7
  1443   0018D2  0D02               	mullw	2
  1444   0018D4  50F3               	movf	243,w,c
  1445   0018D6  0F01               	addlw	low _lat_reg
  1446   0018D8  6ED9               	movwf	fsr2l,c
  1447   0018DA  6ADA               	clrf	fsr2h,c
  1448   0018DC  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
  1449   0018E0  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
  1450   0018E4  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1451   0018E8  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1452   0018EC  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1453   0018EE  12DF               	iorwf	indf2,f,c
  1454   0018F0  EF23  F00C         	goto	l1385
  1455   0018F4                     l1393:
  1456   0018F4  5024               	movf	gpio_pin_write_logic@logic^0,w,c
  1457   0018F6  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1458   0018F8  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "simple"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ;	Chosen strategy is simple_byte
  1467   0018FA  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1468   0018FC  0A00               	xorlw	0	; case 0
  1469   0018FE  B4D8               	btfsc	status,2,c
  1470   001900  EF84  F00C         	goto	l1673
  1471   001904  EF23  F00C         	goto	l1385
  1472   001908                     l1673:
  1473                           
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 2, Range of values is 0 to 1
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte            7     4 (average)
  1479                           ;	Chosen strategy is simple_byte
  1480   001908  5025               	movf	??_gpio_pin_write_logic^0,w,c
  1481   00190A  0A00               	xorlw	0	; case 0
  1482   00190C  B4D8               	btfsc	status,2,c
  1483   00190E  EF27  F00C         	goto	l1387
  1484   001912  0A01               	xorlw	1	; case 1
  1485   001914  B4D8               	btfsc	status,2,c
  1486   001916  EF52  F00C         	goto	l1389
  1487   00191A  EF23  F00C         	goto	l1385
  1488   00191E                     l1395:
  1489                           
  1490                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 93:     return ret;
  1491   00191E  502A               	movf	gpio_pin_write_logic@ret^0,w,c
  1492   001920  0012               	return		;funcret
  1493   001922                     __end_of_gpio_pin_write_logic:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _dc_motor_intialize *****************
  1497 ;; Defined at:
  1498 ;;		line 5 in file "ECAL_layer/DC_MOTOR/ecu_dc_motor.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  dc_motor_con    1    7[COMRAM] PTR struct .
  1501 ;;		 -> Motor(4), 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  _Motor_A        2   12[COMRAM] struct .[2]
  1504 ;;  _Motor_B        2   10[COMRAM] struct .[2]
  1505 ;;  ret             1    9[COMRAM] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      unsigned char 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1515 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;Total ram usage:        7 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 1
  1522 ;; This function calls:
  1523 ;;		_gpio_pin_dirction_intialize
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text5
  1530   001530                     __ptext5:
  1531                           	callstack 0
  1532   001530                     _dc_motor_intialize:
  1533                           	callstack 29
  1534   001530                     
  1535                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 7:     pin_config_t _Motor_A[2]={{.pin=dc_motor_con
      +                          fig->Motor_A_PIN[0].M_pin,
  1536   001530  0E00               	movlw	0
  1537   001532  6E30               	movwf	(dc_motor_intialize@_Motor_A+1)^0,c
  1538   001534  0E00               	movlw	0
  1539   001536  6E2F               	movwf	dc_motor_intialize@_Motor_A^0,c
  1540   001538  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1541   00153A  6ED9               	movwf	fsr2l,c
  1542   00153C  6ADA               	clrf	fsr2h,c
  1543   00153E  30DF               	rrcf	223,w,c
  1544   001540  32E8               	rrcf	wreg,f,c
  1545   001542  32E8               	rrcf	wreg,f,c
  1546   001544  0B07               	andlw	7
  1547   001546  6E2B               	movwf	??_dc_motor_intialize^0,c
  1548   001548  502F               	movf	dc_motor_intialize@_Motor_A^0,w,c
  1549   00154A  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1550   00154C  0BF8               	andlw	-8
  1551   00154E  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1552   001550  6E2F               	movwf	dc_motor_intialize@_Motor_A^0,c
  1553   001552  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1554   001554  6ED9               	movwf	fsr2l,c
  1555   001556  6ADA               	clrf	fsr2h,c
  1556   001558  50DF               	movf	223,w,c
  1557   00155A  0B07               	andlw	7
  1558   00155C  6E2B               	movwf	??_dc_motor_intialize^0,c
  1559   00155E  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1560   001560  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1561   001562  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1562   001564  502F               	movf	dc_motor_intialize@_Motor_A^0,w,c
  1563   001566  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1564   001568  0BC7               	andlw	-57
  1565   00156A  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1566   00156C  6E2F               	movwf	dc_motor_intialize@_Motor_A^0,c
  1567   00156E  9C2F               	bcf	dc_motor_intialize@_Motor_A^0,6,c
  1568   001570  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1569   001572  6ED9               	movwf	fsr2l,c
  1570   001574  6ADA               	clrf	fsr2h,c
  1571   001576  ACDF               	btfss	indf2,6,c
  1572   001578  D002               	bra	u765
  1573   00157A  8E2F               	bsf	dc_motor_intialize@_Motor_A^0,7,c
  1574   00157C  D001               	bra	u767
  1575   00157E                     u765:
  1576   00157E  9E2F               	bcf	dc_motor_intialize@_Motor_A^0,7,c
  1577   001580                     u767:
  1578   001580  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1579   001582  6ED9               	movwf	fsr2l,c
  1580   001584  6ADA               	clrf	fsr2h,c
  1581   001586  0E01               	movlw	1
  1582   001588  26D9               	addwf	fsr2l,f,c
  1583   00158A  30DF               	rrcf	223,w,c
  1584   00158C  32E8               	rrcf	wreg,f,c
  1585   00158E  32E8               	rrcf	wreg,f,c
  1586   001590  0B07               	andlw	7
  1587   001592  6E2B               	movwf	??_dc_motor_intialize^0,c
  1588   001594  5030               	movf	(dc_motor_intialize@_Motor_A+1)^0,w,c
  1589   001596  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1590   001598  0BF8               	andlw	-8
  1591   00159A  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1592   00159C  6E30               	movwf	(dc_motor_intialize@_Motor_A+1)^0,c
  1593   00159E  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1594   0015A0  6ED9               	movwf	fsr2l,c
  1595   0015A2  6ADA               	clrf	fsr2h,c
  1596   0015A4  0E01               	movlw	1
  1597   0015A6  26D9               	addwf	fsr2l,f,c
  1598   0015A8  50DF               	movf	223,w,c
  1599   0015AA  0B07               	andlw	7
  1600   0015AC  6E2B               	movwf	??_dc_motor_intialize^0,c
  1601   0015AE  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1602   0015B0  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1603   0015B2  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1604   0015B4  5030               	movf	(dc_motor_intialize@_Motor_A+1)^0,w,c
  1605   0015B6  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1606   0015B8  0BC7               	andlw	-57
  1607   0015BA  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1608   0015BC  6E30               	movwf	(dc_motor_intialize@_Motor_A+1)^0,c
  1609   0015BE  9C30               	bcf	(dc_motor_intialize@_Motor_A+1)^0,6,c
  1610   0015C0  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1611   0015C2  6ED9               	movwf	fsr2l,c
  1612   0015C4  6ADA               	clrf	fsr2h,c
  1613   0015C6  0E01               	movlw	1
  1614   0015C8  26D9               	addwf	fsr2l,f,c
  1615   0015CA  ACDF               	btfss	indf2,6,c
  1616   0015CC  D002               	bra	u775
  1617   0015CE  8E30               	bsf	(dc_motor_intialize@_Motor_A+1)^0,7,c
  1618   0015D0  D001               	bra	u777
  1619   0015D2                     u775:
  1620   0015D2  9E30               	bcf	(dc_motor_intialize@_Motor_A+1)^0,7,c
  1621   0015D4                     u777:
  1622   0015D4                     
  1623                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 16:        pin_config_t _Motor_B[2]={{.pin=dc_motor
      +                          _config->Motor_B_PIN[0].M_pin,
  1624   0015D4  0E00               	movlw	0
  1625   0015D6  6E2E               	movwf	(dc_motor_intialize@_Motor_B+1)^0,c
  1626   0015D8  0E00               	movlw	0
  1627   0015DA  6E2D               	movwf	dc_motor_intialize@_Motor_B^0,c
  1628   0015DC  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1629   0015DE  6ED9               	movwf	fsr2l,c
  1630   0015E0  6ADA               	clrf	fsr2h,c
  1631   0015E2  0E02               	movlw	2
  1632   0015E4  26D9               	addwf	fsr2l,f,c
  1633   0015E6  30DF               	rrcf	223,w,c
  1634   0015E8  32E8               	rrcf	wreg,f,c
  1635   0015EA  32E8               	rrcf	wreg,f,c
  1636   0015EC  0B07               	andlw	7
  1637   0015EE  6E2B               	movwf	??_dc_motor_intialize^0,c
  1638   0015F0  502D               	movf	dc_motor_intialize@_Motor_B^0,w,c
  1639   0015F2  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1640   0015F4  0BF8               	andlw	-8
  1641   0015F6  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1642   0015F8  6E2D               	movwf	dc_motor_intialize@_Motor_B^0,c
  1643   0015FA  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1644   0015FC  6ED9               	movwf	fsr2l,c
  1645   0015FE  6ADA               	clrf	fsr2h,c
  1646   001600  0E02               	movlw	2
  1647   001602  26D9               	addwf	fsr2l,f,c
  1648   001604  50DF               	movf	223,w,c
  1649   001606  0B07               	andlw	7
  1650   001608  6E2B               	movwf	??_dc_motor_intialize^0,c
  1651   00160A  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1652   00160C  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1653   00160E  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1654   001610  502D               	movf	dc_motor_intialize@_Motor_B^0,w,c
  1655   001612  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1656   001614  0BC7               	andlw	-57
  1657   001616  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1658   001618  6E2D               	movwf	dc_motor_intialize@_Motor_B^0,c
  1659   00161A  9C2D               	bcf	dc_motor_intialize@_Motor_B^0,6,c
  1660   00161C  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1661   00161E  6ED9               	movwf	fsr2l,c
  1662   001620  6ADA               	clrf	fsr2h,c
  1663   001622  0E02               	movlw	2
  1664   001624  26D9               	addwf	fsr2l,f,c
  1665   001626  ACDF               	btfss	indf2,6,c
  1666   001628  D002               	bra	u785
  1667   00162A  8E2D               	bsf	dc_motor_intialize@_Motor_B^0,7,c
  1668   00162C  D001               	bra	u787
  1669   00162E                     u785:
  1670   00162E  9E2D               	bcf	dc_motor_intialize@_Motor_B^0,7,c
  1671   001630                     u787:
  1672   001630  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1673   001632  6ED9               	movwf	fsr2l,c
  1674   001634  6ADA               	clrf	fsr2h,c
  1675   001636  0E03               	movlw	3
  1676   001638  26D9               	addwf	fsr2l,f,c
  1677   00163A  30DF               	rrcf	223,w,c
  1678   00163C  32E8               	rrcf	wreg,f,c
  1679   00163E  32E8               	rrcf	wreg,f,c
  1680   001640  0B07               	andlw	7
  1681   001642  6E2B               	movwf	??_dc_motor_intialize^0,c
  1682   001644  502E               	movf	(dc_motor_intialize@_Motor_B+1)^0,w,c
  1683   001646  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1684   001648  0BF8               	andlw	-8
  1685   00164A  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1686   00164C  6E2E               	movwf	(dc_motor_intialize@_Motor_B+1)^0,c
  1687   00164E  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1688   001650  6ED9               	movwf	fsr2l,c
  1689   001652  6ADA               	clrf	fsr2h,c
  1690   001654  0E03               	movlw	3
  1691   001656  26D9               	addwf	fsr2l,f,c
  1692   001658  50DF               	movf	223,w,c
  1693   00165A  0B07               	andlw	7
  1694   00165C  6E2B               	movwf	??_dc_motor_intialize^0,c
  1695   00165E  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1696   001660  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1697   001662  462B               	rlncf	??_dc_motor_intialize^0,f,c
  1698   001664  502E               	movf	(dc_motor_intialize@_Motor_B+1)^0,w,c
  1699   001666  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1700   001668  0BC7               	andlw	-57
  1701   00166A  182B               	xorwf	??_dc_motor_intialize^0,w,c
  1702   00166C  6E2E               	movwf	(dc_motor_intialize@_Motor_B+1)^0,c
  1703   00166E  9C2E               	bcf	(dc_motor_intialize@_Motor_B+1)^0,6,c
  1704   001670  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1705   001672  6ED9               	movwf	fsr2l,c
  1706   001674  6ADA               	clrf	fsr2h,c
  1707   001676  0E03               	movlw	3
  1708   001678  26D9               	addwf	fsr2l,f,c
  1709   00167A  ACDF               	btfss	indf2,6,c
  1710   00167C  D002               	bra	u795
  1711   00167E  8E2E               	bsf	(dc_motor_intialize@_Motor_B+1)^0,7,c
  1712   001680  D001               	bra	u797
  1713   001682                     u795:
  1714   001682  9E2E               	bcf	(dc_motor_intialize@_Motor_B+1)^0,7,c
  1715   001684                     u797:
  1716   001684                     
  1717                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 27:   if(((void*)0)==dc_motor_config)
  1718   001684  502A               	movf	dc_motor_intialize@dc_motor_config^0,w,c
  1719   001686  A4D8               	btfss	status,2,c
  1720   001688  EF48  F00B         	goto	u801
  1721   00168C  EF4A  F00B         	goto	u800
  1722   001690                     u801:
  1723   001690  EF4E  F00B         	goto	l1443
  1724   001694                     u800:
  1725   001694                     
  1726                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 28:   {;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 29:    
      +                             ret=(STD_RetunType)0x00;
  1727   001694  0E00               	movlw	0
  1728   001696  6E2C               	movwf	dc_motor_intialize@ret^0,c
  1729                           
  1730                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 30:   }
  1731   001698  EF58  F00B         	goto	l1445
  1732   00169C                     l1443:
  1733                           
  1734                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 32:   {;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 33:    
      +                             ret=gpio_pin_dirction_intialize(&_Motor_A[0]);
  1735   00169C  0E2F               	movlw	low dc_motor_intialize@_Motor_A
  1736   00169E  6E23               	movwf	gpio_pin_dirction_intialize@_pin_config^0,c
  1737   0016A0  EC5A  F00B         	call	_gpio_pin_dirction_intialize	;wreg free
  1738   0016A4  6E2C               	movwf	dc_motor_intialize@ret^0,c
  1739                           
  1740                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 34:       ret=gpio_pin_dirction_intialize(&_Motor_A
      +                          [1]);
  1741   0016A6  0E30               	movlw	low (dc_motor_intialize@_Motor_A+1)
  1742   0016A8  6E23               	movwf	gpio_pin_dirction_intialize@_pin_config^0,c
  1743   0016AA  EC5A  F00B         	call	_gpio_pin_dirction_intialize	;wreg free
  1744   0016AE  6E2C               	movwf	dc_motor_intialize@ret^0,c
  1745   0016B0                     l1445:
  1746                           
  1747                           ;ECAL_layer/DC_MOTOR/ecu_dc_motor.c: 38:     return ret;
  1748   0016B0  502C               	movf	dc_motor_intialize@ret^0,w,c
  1749   0016B2  0012               	return		;funcret
  1750   0016B4                     __end_of_dc_motor_intialize:
  1751                           	callstack 0
  1752                           
  1753 ;; *************** function _gpio_pin_dirction_intialize *****************
  1754 ;; Defined at:
  1755 ;;		line 19 in file "ECAL_layer/PIC18f_MCAL_gpio.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1758 ;;		 -> dc_motor_intialize@_Motor_A(2), button_intialize@button_pin(1), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  ret             1    6[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      unsigned char 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;Total ram usage:        7 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_dc_motor_intialize
  1780 ;;		_button_intialize
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text6
  1785   0016B4                     __ptext6:
  1786                           	callstack 0
  1787   0016B4                     _gpio_pin_dirction_intialize:
  1788                           	callstack 29
  1789   0016B4                     
  1790                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 20:     uint8_t ret=(STD_RetunType)0x01 ;
  1791   0016B4  0E01               	movlw	1
  1792   0016B6  6E29               	movwf	gpio_pin_dirction_intialize@ret^0,c
  1793                           
  1794                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 21:     if((_pin_config==((void*)0))||(_pin_config->pin>
      +                          7)||(_pin_config->port>5))
  1795   0016B8  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1796   0016BA  B4D8               	btfsc	status,2,c
  1797   0016BC  EF62  F00B         	goto	u641
  1798   0016C0  EF64  F00B         	goto	u640
  1799   0016C4                     u641:
  1800   0016C4  EF82  F00B         	goto	l1361
  1801   0016C8                     u640:
  1802   0016C8  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1803   0016CA  6ED9               	movwf	fsr2l,c
  1804   0016CC  6ADA               	clrf	fsr2h,c
  1805   0016CE  30DF               	rrcf	223,w,c
  1806   0016D0  32E8               	rrcf	wreg,f,c
  1807   0016D2  32E8               	rrcf	wreg,f,c
  1808   0016D4  0B07               	andlw	7
  1809   0016D6  6E24               	movwf	??_gpio_pin_dirction_intialize^0,c
  1810   0016D8  0E08               	movlw	8
  1811   0016DA  6024               	cpfslt	??_gpio_pin_dirction_intialize^0,c
  1812   0016DC  EF72  F00B         	goto	u651
  1813   0016E0  EF74  F00B         	goto	u650
  1814   0016E4                     u651:
  1815   0016E4  EF82  F00B         	goto	l1361
  1816   0016E8                     u650:
  1817   0016E8  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1818   0016EA  6ED9               	movwf	fsr2l,c
  1819   0016EC  6ADA               	clrf	fsr2h,c
  1820   0016EE  50DF               	movf	223,w,c
  1821   0016F0  0B07               	andlw	7
  1822   0016F2  6E24               	movwf	??_gpio_pin_dirction_intialize^0,c
  1823   0016F4  0E05               	movlw	5
  1824   0016F6  6424               	cpfsgt	??_gpio_pin_dirction_intialize^0,c
  1825   0016F8  EF80  F00B         	goto	u661
  1826   0016FC  EF82  F00B         	goto	u660
  1827   001700                     u661:
  1828   001700  EFD9  F00B         	goto	l1369
  1829   001704                     u660:
  1830   001704                     l1361:
  1831                           
  1832                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 22:     {;ECAL_layer/PIC18f_MCAL_gpio.c: 23:         ret
      +                          =(STD_RetunType)0x00 ;
  1833   001704  0E00               	movlw	0
  1834   001706  6E29               	movwf	gpio_pin_dirction_intialize@ret^0,c
  1835                           
  1836                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 25:     }
  1837   001708  EFF9  F00B         	goto	l1371
  1838   00170C                     l1363:
  1839                           
  1840                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 31:          (*tris_reg[_pin_config->port]&=~((uint8_t)1
      +                           <<_pin_config->pin));
  1841   00170C  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1842   00170E  6ED9               	movwf	fsr2l,c
  1843   001710  6ADA               	clrf	fsr2h,c
  1844   001712  30DF               	rrcf	223,w,c
  1845   001714  32E8               	rrcf	wreg,f,c
  1846   001716  32E8               	rrcf	wreg,f,c
  1847   001718  0B07               	andlw	7
  1848   00171A  6E24               	movwf	??_gpio_pin_dirction_intialize^0,c
  1849   00171C  0E01               	movlw	1
  1850   00171E  6E25               	movwf	(??_gpio_pin_dirction_intialize+1)^0,c
  1851   001720  2A24               	incf	??_gpio_pin_dirction_intialize^0,f,c
  1852   001722  EF95  F00B         	goto	u674
  1853   001726                     u675:
  1854   001726  90D8               	bcf	status,0,c
  1855   001728  3625               	rlcf	(??_gpio_pin_dirction_intialize+1)^0,f,c
  1856   00172A                     u674:
  1857   00172A  2E24               	decfsz	??_gpio_pin_dirction_intialize^0,f,c
  1858   00172C  EF93  F00B         	goto	u675
  1859   001730  5025               	movf	(??_gpio_pin_dirction_intialize+1)^0,w,c
  1860   001732  0AFF               	xorlw	255
  1861   001734  6E26               	movwf	(??_gpio_pin_dirction_intialize+2)^0,c
  1862   001736  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1863   001738  6ED9               	movwf	fsr2l,c
  1864   00173A  6ADA               	clrf	fsr2h,c
  1865   00173C  50DF               	movf	223,w,c
  1866   00173E  0B07               	andlw	7
  1867   001740  0D02               	mullw	2
  1868   001742  50F3               	movf	243,w,c
  1869   001744  0F0B               	addlw	low _tris_reg
  1870   001746  6ED9               	movwf	fsr2l,c
  1871   001748  6ADA               	clrf	fsr2h,c
  1872   00174A  CFDE F027          	movff	postinc2,??_gpio_pin_dirction_intialize+3
  1873   00174E  CFDD F028          	movff	postdec2,??_gpio_pin_dirction_intialize+4
  1874   001752  C027  FFD9         	movff	??_gpio_pin_dirction_intialize+3,fsr2l
  1875   001756  C028  FFDA         	movff	??_gpio_pin_dirction_intialize+4,fsr2h
  1876   00175A  5026               	movf	(??_gpio_pin_dirction_intialize+2)^0,w,c
  1877   00175C  16DF               	andwf	indf2,f,c
  1878                           
  1879                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 32:                 break;
  1880   00175E  EFF9  F00B         	goto	l1371
  1881   001762                     l1365:
  1882                           
  1883                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 34:               (*tris_reg[_pin_config->port]|=((uint8
      +                          _t)1 <<_pin_config->pin));
  1884   001762  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1885   001764  6ED9               	movwf	fsr2l,c
  1886   001766  6ADA               	clrf	fsr2h,c
  1887   001768  30DF               	rrcf	223,w,c
  1888   00176A  32E8               	rrcf	wreg,f,c
  1889   00176C  32E8               	rrcf	wreg,f,c
  1890   00176E  0B07               	andlw	7
  1891   001770  6E24               	movwf	??_gpio_pin_dirction_intialize^0,c
  1892   001772  0E01               	movlw	1
  1893   001774  6E25               	movwf	(??_gpio_pin_dirction_intialize+1)^0,c
  1894   001776  2A24               	incf	??_gpio_pin_dirction_intialize^0,f,c
  1895   001778  EFC0  F00B         	goto	u684
  1896   00177C                     u685:
  1897   00177C  90D8               	bcf	status,0,c
  1898   00177E  3625               	rlcf	(??_gpio_pin_dirction_intialize+1)^0,f,c
  1899   001780                     u684:
  1900   001780  2E24               	decfsz	??_gpio_pin_dirction_intialize^0,f,c
  1901   001782  EFBE  F00B         	goto	u685
  1902   001786  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1903   001788  6ED9               	movwf	fsr2l,c
  1904   00178A  6ADA               	clrf	fsr2h,c
  1905   00178C  50DF               	movf	223,w,c
  1906   00178E  0B07               	andlw	7
  1907   001790  0D02               	mullw	2
  1908   001792  50F3               	movf	243,w,c
  1909   001794  0F0B               	addlw	low _tris_reg
  1910   001796  6ED9               	movwf	fsr2l,c
  1911   001798  6ADA               	clrf	fsr2h,c
  1912   00179A  CFDE F026          	movff	postinc2,??_gpio_pin_dirction_intialize+2
  1913   00179E  CFDD F027          	movff	postdec2,??_gpio_pin_dirction_intialize+3
  1914   0017A2  C026  FFD9         	movff	??_gpio_pin_dirction_intialize+2,fsr2l
  1915   0017A6  C027  FFDA         	movff	??_gpio_pin_dirction_intialize+3,fsr2h
  1916   0017AA  5025               	movf	(??_gpio_pin_dirction_intialize+1)^0,w,c
  1917   0017AC  12DF               	iorwf	indf2,f,c
  1918   0017AE  EF82  F00B         	goto	l1361
  1919   0017B2                     l1369:
  1920   0017B2  5023               	movf	gpio_pin_dirction_intialize@_pin_config^0,w,c
  1921   0017B4  6ED9               	movwf	fsr2l,c
  1922   0017B6  6ADA               	clrf	fsr2h,c
  1923   0017B8  BCDF               	btfsc	indf2,6,c
  1924   0017BA  EFE1  F00B         	goto	u691
  1925   0017BE  EFE4  F00B         	goto	u690
  1926   0017C2                     u691:
  1927   0017C2  0E01               	movlw	1
  1928   0017C4  EFE5  F00B         	goto	u700
  1929   0017C8                     u690:
  1930   0017C8  0E00               	movlw	0
  1931   0017CA                     u700:
  1932   0017CA  6E24               	movwf	??_gpio_pin_dirction_intialize^0,c
  1933   0017CC  6A25               	clrf	(??_gpio_pin_dirction_intialize+1)^0,c
  1934                           
  1935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1936                           ; Switch size 1, requested type "simple"
  1937                           ; Number of cases is 1, Range of values is 0 to 0
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte            4     3 (average)
  1941                           ;	Chosen strategy is simple_byte
  1942   0017CE  5025               	movf	(??_gpio_pin_dirction_intialize+1)^0,w,c
  1943   0017D0  0A00               	xorlw	0	; case 0
  1944   0017D2  B4D8               	btfsc	status,2,c
  1945   0017D4  EFEE  F00B         	goto	l1675
  1946   0017D8  EF82  F00B         	goto	l1361
  1947   0017DC                     l1675:
  1948                           
  1949                           ; Switch size 1, requested type "simple"
  1950                           ; Number of cases is 2, Range of values is 0 to 1
  1951                           ; switch strategies available:
  1952                           ; Name         Instructions Cycles
  1953                           ; simple_byte            7     4 (average)
  1954                           ;	Chosen strategy is simple_byte
  1955   0017DC  5024               	movf	??_gpio_pin_dirction_intialize^0,w,c
  1956   0017DE  0A00               	xorlw	0	; case 0
  1957   0017E0  B4D8               	btfsc	status,2,c
  1958   0017E2  EF86  F00B         	goto	l1363
  1959   0017E6  0A01               	xorlw	1	; case 1
  1960   0017E8  B4D8               	btfsc	status,2,c
  1961   0017EA  EFB1  F00B         	goto	l1365
  1962   0017EE  EF82  F00B         	goto	l1361
  1963   0017F2                     l1371:
  1964                           
  1965                           ;ECAL_layer/PIC18f_MCAL_gpio.c: 40:     return ret;
  1966   0017F2  5029               	movf	gpio_pin_dirction_intialize@ret^0,w,c
  1967   0017F4  0012               	return		;funcret
  1968   0017F6                     __end_of_gpio_pin_dirction_intialize:
  1969                           	callstack 0
  1970                           
  1971                           	psect	smallconst
  1972   001000                     __psmallconst:
  1973                           	callstack 0
  1974   001000  00                 	db	0
  1975   001001  00                 	db	0	; dummy byte at the end
  1976   000000                     
  1977                           	psect	rparam
  1978   000000                     
  1979                           	psect	config
  1980                           
  1981                           ; Padding undefined space
  1982   300000                     	org	3145728
  1983   300000  FF                 	db	255
  1984                           
  1985                           ;Config register CONFIG1H @ 0x300001
  1986                           ;	Oscillator Selection bits
  1987                           ;	OSC = HS, HS oscillator
  1988                           ;	Fail-Safe Clock Monitor Enable bit
  1989                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1990                           ;	Internal/External Oscillator Switchover bit
  1991                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1992   300001                     	org	3145729
  1993   300001  02                 	db	2
  1994                           
  1995                           ;Config register CONFIG2L @ 0x300002
  1996                           ;	Power-up Timer Enable bit
  1997                           ;	PWRT = OFF, PWRT disabled
  1998                           ;	Brown-out Reset Enable bits
  1999                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2000                           ;	Brown Out Reset Voltage bits
  2001                           ;	BORV = 1, 
  2002   300002                     	org	3145730
  2003   300002  09                 	db	9
  2004                           
  2005                           ;Config register CONFIG2H @ 0x300003
  2006                           ;	Watchdog Timer Enable bit
  2007                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2008                           ;	Watchdog Timer Postscale Select bits
  2009                           ;	WDTPS = 32768, 1:32768
  2010   300003                     	org	3145731
  2011   300003  1E                 	db	30
  2012                           
  2013                           ; Padding undefined space
  2014   300004                     	org	3145732
  2015   300004  FF                 	db	255
  2016                           
  2017                           ;Config register CONFIG3H @ 0x300005
  2018                           ;	CCP2 MUX bit
  2019                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2020                           ;	PORTB A/D Enable bit
  2021                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2022                           ;	Low-Power Timer1 Oscillator Enable bit
  2023                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2024                           ;	MCLR Pin Enable bit
  2025                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2026   300005                     	org	3145733
  2027   300005  81                 	db	129
  2028                           
  2029                           ;Config register CONFIG4L @ 0x300006
  2030                           ;	Stack Full/Underflow Reset Enable bit
  2031                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2032                           ;	Single-Supply ICSP Enable bit
  2033                           ;	LVP = OFF, Single-Supply ICSP disabled
  2034                           ;	Extended Instruction Set Enable bit
  2035                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2036                           ;	Background Debugger Enable bit
  2037                           ;	DEBUG = 0x1, unprogrammed default
  2038   300006                     	org	3145734
  2039   300006  81                 	db	129
  2040                           
  2041                           ; Padding undefined space
  2042   300007                     	org	3145735
  2043   300007  FF                 	db	255
  2044                           
  2045                           ;Config register CONFIG5L @ 0x300008
  2046                           ;	Code Protection bit
  2047                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2048                           ;	Code Protection bit
  2049                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2050                           ;	Code Protection bit
  2051                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2052                           ;	Code Protection bit
  2053                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2054   300008                     	org	3145736
  2055   300008  0F                 	db	15
  2056                           
  2057                           ;Config register CONFIG5H @ 0x300009
  2058                           ;	Boot Block Code Protection bit
  2059                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2060                           ;	Data EEPROM Code Protection bit
  2061                           ;	CPD = OFF, Data EEPROM not code-protected
  2062   300009                     	org	3145737
  2063   300009  C0                 	db	192
  2064                           
  2065                           ;Config register CONFIG6L @ 0x30000A
  2066                           ;	Write Protection bit
  2067                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2068                           ;	Write Protection bit
  2069                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2070                           ;	Write Protection bit
  2071                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2072                           ;	Write Protection bit
  2073                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2074   30000A                     	org	3145738
  2075   30000A  0F                 	db	15
  2076                           
  2077                           ;Config register CONFIG6H @ 0x30000B
  2078                           ;	Configuration Register Write Protection bit
  2079                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2080                           ;	Boot Block Write Protection bit
  2081                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2082                           ;	Data EEPROM Write Protection bit
  2083                           ;	WRTD = OFF, Data EEPROM not write-protected
  2084   30000B                     	org	3145739
  2085   30000B  E0                 	db	224
  2086                           
  2087                           ;Config register CONFIG7L @ 0x30000C
  2088                           ;	Table Read Protection bit
  2089                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2090                           ;	Table Read Protection bit
  2091                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2092                           ;	Table Read Protection bit
  2093                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2094                           ;	Table Read Protection bit
  2095                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2096   30000C                     	org	3145740
  2097   30000C  0F                 	db	15
  2098                           
  2099                           ;Config register CONFIG7H @ 0x30000D
  2100                           ;	Boot Block Table Read Protection bit
  2101                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2102   30000D                     	org	3145741
  2103   30000D  40                 	db	64
  2104                           tosu	equ	0xFFF
  2105                           tosh	equ	0xFFE
  2106                           tosl	equ	0xFFD
  2107                           stkptr	equ	0xFFC
  2108                           pclatu	equ	0xFFB
  2109                           pclath	equ	0xFFA
  2110                           pcl	equ	0xFF9
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           prodh	equ	0xFF4
  2116                           prodl	equ	0xFF3
  2117                           indf0	equ	0xFEF
  2118                           postinc0	equ	0xFEE
  2119                           postdec0	equ	0xFED
  2120                           preinc0	equ	0xFEC
  2121                           plusw0	equ	0xFEB
  2122                           fsr0h	equ	0xFEA
  2123                           fsr0l	equ	0xFE9
  2124                           wreg	equ	0xFE8
  2125                           indf1	equ	0xFE7
  2126                           postinc1	equ	0xFE6
  2127                           postdec1	equ	0xFE5
  2128                           preinc1	equ	0xFE4
  2129                           plusw1	equ	0xFE3
  2130                           fsr1h	equ	0xFE2
  2131                           fsr1l	equ	0xFE1
  2132                           bsr	equ	0xFE0
  2133                           indf2	equ	0xFDF
  2134                           postinc2	equ	0xFDE
  2135                           postdec2	equ	0xFDD
  2136                           preinc2	equ	0xFDC
  2137                           plusw2	equ	0xFDB
  2138                           fsr2h	equ	0xFDA
  2139                           fsr2l	equ	0xFD9
  2140                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     19      71
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_intialize@dc_motor_config	PTR struct . size(1) Largest target is 4
		 -> Motor(COMRAM[4]), 

    dc_motor_move_left@dc_motor_config	PTR struct . size(1) Largest target is 4
		 -> Motor_1(COMRAM[4]), 

    dc_motor_move_right@dc_motor_config	PTR struct . size(1) Largest target is 4
		 -> Motor_1(COMRAM[4]), 

    dc_motor_stop@dc_motor_config	PTR struct . size(1) Largest target is 4
		 -> Motor_1(COMRAM[4]), 

    gpio_pin_dirction_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> button_intialize@button_pin(COMRAM[1]), dc_motor_intialize@_Motor_A(COMRAM[2]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_move_left@_Motor_A(COMRAM[2]), dc_motor_move_right@_Motor_A(COMRAM[2]), dc_motor_stop@_Motor_A(COMRAM[2]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    port_reg	PTR volatile unsigned char [3] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 


Critical Paths under _main in COMRAM

    _main->_dc_motor_move_left
    _main->_dc_motor_move_right
    _main->_dc_motor_stop
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _dc_motor_intialize->_gpio_pin_dirction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9472
                                             17 COMRAM     2     2      0
                 _dc_motor_intialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        9     7      2    2802
                                              8 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  9     7      2    2802
                                              8 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   9     7      2    2802
                                              8 COMRAM     9     7      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    2025
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _dc_motor_intialize                                   7     6      1    1062
                                              7 COMRAM     7     6      1
        _gpio_pin_dirction_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_dirction_intialize                          7     6      1     429
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dc_motor_intialize
     _gpio_pin_dirction_intialize
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           80      0       0      37        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     13      47       1       55.9%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      12        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 16:09:21 2023

                                    l51 17F4                                      l75 1920  
                                   l153 16B2                                     l137 192A  
                                   l181 152E                                     l167 1374  
                                   l195 11BA                                     u700 17CA  
                                   u710 180A                                     u711 1806  
                                   u640 16C8                                     u800 1694  
                                   u720 182A                                     u641 16C4  
                                   u801 1690                                     u721 1826  
                                   u650 16E8                                     u730 1846  
                                   u651 16E4                                     u731 1842  
                                   u660 1704                                     u900 1166  
                                   u661 1700                                     u901 1162  
                                   u815 120A                                     u744 186C  
                                   u745 1868                                     u825 125E  
                                   u817 120C                                     u690 17C8  
                                   u674 172A                                     u754 18C2  
                                   u850 1320                                     u691 17C2  
                                   u675 1726                                     u755 18BE  
                                   u915 13C4                                     u851 131C  
                                   u835 12BA                                     u827 1260  
                                   u684 1780                                     u685 177C  
                                   u765 157E                                     u925 1418  
                                   u917 13C6                                     u845 130E  
                                   u837 12BC                                     u950 14DA  
                                   u775 15D2                                     u767 1580  
                                   u951 14D6                                     u935 1474  
                                   u927 141A                                     u847 1310  
                                   u785 162E                                     u777 15D4  
                                   u945 14C8                                     u937 1476  
                                   u865 1050                                     u795 1682  
                                   u787 1630                                     u947 14CA  
                                   u875 10A4                                     u867 1052  
                                   u797 1684                                     u885 1100  
                                   u877 10A6                                     u895 1154  
                                   u887 1102                                     u897 1156  
                                   u977 1940                                     u987 1964  
                                   u997 1988                                     wreg 0FE8  
                                  l1411 1570                                    l1403 1530  
                                  l1421 15D4                                    l1413 1580  
                                  l1405 1538                                    l1431 1630  
                                  l1423 15DC                                    l1415 159E  
                                  l1407 1552                                    l1511 1040  
                                  l1361 1704                                    l1441 1694  
                                  l1433 164E                                    l1425 15FA  
                                  l1417 15BE                                    l1409 156E  
                                  l1601 14E2                                    l1521 1092  
                                  l1513 1042                                    l1505 1002  
                                  l1363 170C                                    l1371 17F2  
                                  l1355 16B4                                    l1443 169C  
                                  l1435 166E                                    l1427 161A  
                                  l1419 15C0                                    l1451 11C4  
                                  l1531 10EE                                    l1523 10A6  
                                  l1515 1052                                    l1507 100A  
                                  l1365 1762                                    l1357 16C8  
                                  l1445 16B0                                    l1437 1670  
                                  l1429 161C                                    l1381 180A  
                                  l1461 122A                                    l1453 11DE  
                                  l1541 1156                                    l1533 1102  
                                  l1525 10AE                                    l1517 1070  
                                  l1509 1024                                    l1359 16E8  
                                  l1439 1684                                    l1383 182A  
                                  l1607 1502                                    l1471 1286  
                                  l1463 124A                                    l1455 11FA  
                                  l1543 1166                                    l1551 118E  
                                  l1535 1120                                    l1527 10CC  
                                  l1519 1090                                    l1369 17B2  
                                  l1393 18F4                                    l1385 1846  
                                  l1609 152C                                    l1561 1376  
                                  l1481 12FA                                    l1473 12A6  
                                  l1465 124C                                    l1457 11FC  
                                  l1449 11BC                                    l1545 116E  
                                  l1553 11B8                                    l1537 1140  
                                  l1529 10EC                                    l1641 194E  
                                  l1387 184E                                    l1395 191E  
                                  l1379 17F6                                    l1571 13C6  
                                  l1563 137E                                    l1483 12FC  
                                  l1475 12A8                                    l1467 1260  
                                  l1459 120C                                    l1539 1142  
                                  l1643 1972                                    l1389 18A4  
                                  l1581 1422                                    l1573 13E4  
                                  l1565 1398                                    l1485 1310  
                                  l1477 12BC                                    l1469 1268  
                                  l1645 197E                                    l1637 1922  
                                  l1671 1516                                    l1591 1494  
                                  l1583 1440                                    l1575 1404  
                                  l1567 13B4                                    l1487 1320  
                                  l1495 1348                                    l1479 12DA  
                                  l1639 1936                                    l1673 1908  
                                  l1593 14B4                                    l1585 1460  
                                  l1577 1406                                    l1569 13B6  
                                  l1489 1328                                    l1497 1372  
                                  l1675 17DC                                    l1595 14B6  
                                  l1587 1462                                    l1579 141A  
                                  l1667 11A2                                    l1597 14CA  
                                  l1589 1476                                    l1669 135C  
                                  l1599 14DA            dc_motor_stop@dc_motor_config 002B  
        dc_motor_move_left@Motor_target 002C                                    _main 1922  
                                  fsr2h 0FDA                                    indf2 0FDF  
                                  fsr1l 0FE1                                    fsr2l 0FD9  
             dc_motor_stop@Motor_target 002C                                    prodl 0FF3  
                                  start 0000                            ___param_bank 0000  
        gpio_pin_dirction_intialize@ret 0029                    _gpio_pin_write_logic 17F6  
                                 ?_main 0023                                   _Motor 001F  
                                 tablat 0FF5                   dc_motor_intialize@ret 002C  
                                 status 0FD8                         __initialization 199E  
                          __end_of_main 199E                   ?_gpio_pin_write_logic 0023  
                                ??_main 0034                           __activetblptr 0002  
gpio_pin_dirction_intialize@_pin_config 0023             __end_of_dc_motor_move_right 1376  
                                clear_0 19C4                                  isa$std 0001  
                          __pdataCOMRAM 0001       dc_motor_move_left@dc_motor_config 002B  
                          __mediumconst 0000                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                            __accesstop 0080                 __end_of__initialization 19CA  
                         ___rparam_used 0001                  ??_gpio_pin_write_logic 0025  
                        __pcstackCOMRAM 0023       dc_motor_intialize@dc_motor_config 002A  
                button_read_state@F2933 0046                dc_motor_move_right@F2945 0040  
              dc_motor_move_right@F2947 003E     __end_of_gpio_pin_dirction_intialize 17F6  
           _gpio_pin_dirction_intialize 16B4                                 __Hparam 0000  
                               __Lparam 0000                                 _Motor_1 001B  
                 dc_motor_move_left@ret 002F                            __psmallconst 1000  
                               __pcinit 199E                                 __ramtop 1000  
                               __ptext0 1922                                 __ptext1 1002  
                               __ptext2 11BC                                 __ptext3 1376  
                               __ptext4 17F6                                 __ptext5 1530  
                               __ptext6 16B4                                 _lat_reg 0001  
                  end_of_initialization 19CA                 dc_motor_intialize@F2937 0044  
               dc_motor_intialize@F2939 0042                           __Lmediumconst 0000  
                    dc_motor_stop@F2961 0038                      dc_motor_stop@F2963 0036  
           dc_motor_move_right@_Motor_A 0032             dc_motor_move_right@_Motor_B 0030  
                         _dc_motor_stop 1002                                 postdec1 0FE5  
                               postdec2 0FDD                                 postinc0 0FEE  
                               postinc2 0FDE              dc_motor_intialize@_Motor_A 002F  
            dc_motor_intialize@_Motor_B 002D                          ?_dc_motor_stop 002B  
                         __pidataCOMRAM 19D4                     start_initialization 199E  
            __end_of_dc_motor_intialize 16B4                 dc_motor_move_left@F2953 003C  
               dc_motor_move_left@F2955 003A              __end_of_dc_motor_move_left 1530  
            dc_motor_move_left@_Motor_A 0032              dc_motor_move_left@_Motor_B 0030  
                      dc_motor_stop@ret 002F                             __pbssCOMRAM 0036  
                       ??_dc_motor_stop 002D      dc_motor_move_right@dc_motor_config 002B  
       gpio_pin_write_logic@_pin_config 0023               gpio_pin_write_logic@logic 0024  
                           __smallconst 1000         dc_motor_move_right@Motor_target 002C  
               gpio_pin_write_logic@ret 002A                               copy_data0 19B2  
                 dc_motor_stop@_Motor_A 0032                   dc_motor_stop@_Motor_B 0030  
                   _dc_motor_move_right 11BC                                __Hrparam 0000  
                              __Lrparam 0000                    ?_dc_motor_move_right 002B  
                dc_motor_move_right@ret 002F                   button_intialize@F2927 0047  
                              isa$xinst 0000                      _dc_motor_intialize 1530  
                              _port_reg 0015                                _tris_reg 000B  
                 ??_dc_motor_move_right 002D                     ?_dc_motor_intialize 002A  
                    _dc_motor_move_left 1376            __end_of_gpio_pin_write_logic 1922  
                   ?_dc_motor_move_left 002B            ?_gpio_pin_dirction_intialize 0023  
                  ??_dc_motor_intialize 002B                    ??_dc_motor_move_left 002D  
         ??_gpio_pin_dirction_intialize 0024                   __end_of_dc_motor_stop 11BC  
